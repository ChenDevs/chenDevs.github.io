const t=JSON.parse(`{"key":"v-29fb20db","path":"/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/%E5%89%8D%E7%AB%AF%E8%BF%9B%E9%98%B6/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%AE%97%E6%B3%95/%E6%A0%88.html","title":"栈","lang":"zh-CN","frontmatter":{"title":"栈","tag":"栈","category":"数据结构与算法","order":3,"description":"简介 一个后进先出的数据结构 javaScript中没有栈，但可以用 Array 实现栈的所有功能 const stack = [] stack.push(1) stack.push(2) const item1 = stack.pop() const item2 = stack.pop()","head":[["meta",{"property":"og:url","content":"http://magicbegin.gitee.io/vuepress-blog/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/%E5%89%8D%E7%AB%AF%E8%BF%9B%E9%98%B6/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%AE%97%E6%B3%95/%E6%A0%88.html"}],["meta",{"property":"og:site_name","content":"Mr Chen's Blog"}],["meta",{"property":"og:title","content":"栈"}],["meta",{"property":"og:description","content":"简介 一个后进先出的数据结构 javaScript中没有栈，但可以用 Array 实现栈的所有功能 const stack = [] stack.push(1) stack.push(2) const item1 = stack.pop() const item2 = stack.pop()"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-10-27T11:35:00.000Z"}],["meta",{"property":"article:author","content":"Mr Chen"}],["meta",{"property":"article:tag","content":"栈"}],["meta",{"property":"article:modified_time","content":"2023-10-27T11:35:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"栈\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-10-27T11:35:00.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr Chen\\",\\"url\\":\\"https://gitee.com/magicBegin/vuepress-blog\\",\\"email\\":\\"599422271@qq.com\\"}]}"]]},"headers":[{"level":2,"title":"简介","slug":"简介","link":"#简介","children":[]},{"level":2,"title":"应用场景","slug":"应用场景","link":"#应用场景","children":[{"level":3,"title":"十进制转二级制","slug":"十进制转二级制","link":"#十进制转二级制","children":[]},{"level":3,"title":"判断字符串的括号是否有效","slug":"判断字符串的括号是否有效","link":"#判断字符串的括号是否有效","children":[]},{"level":3,"title":"用队列实现栈","slug":"用队列实现栈","link":"#用队列实现栈","children":[]},{"level":3,"title":"前端与栈：函数调用堆栈","slug":"前端与栈-函数调用堆栈","link":"#前端与栈-函数调用堆栈","children":[]}]}],"git":{"createdTime":1698406500000,"updatedTime":1698406500000,"contributors":[{"name":"chenzhen","email":"599422271@qq.com","commits":1}]},"readingTime":{"minutes":2.85,"words":855},"filePathRelative":"前端开发/前端进阶/数据结构算法/栈.md","localizedDate":"2023年10月27日","excerpt":"<h2> 简介</h2>\\n<ul>\\n<li>一个<strong>后进先出</strong>的数据结构</li>\\n<li><code>javaScript</code>中没有栈，但可以用 <code>Array</code> 实现栈的所有功能</li>\\n</ul>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token keyword\\">const</span> stack <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span>\\nstack<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">push</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">)</span>\\nstack<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">push</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">2</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token keyword\\">const</span> item1 <span class=\\"token operator\\">=</span> stack<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">pop</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token keyword\\">const</span> item2 <span class=\\"token operator\\">=</span> stack<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">pop</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{t as data};
