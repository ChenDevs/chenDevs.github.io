const n=JSON.parse(`{"key":"v-e50f465a","path":"/%E5%BC%80%E5%8F%91%E6%97%A5%E5%BF%97/JS/%E9%87%8D%E6%96%B0%E7%90%86%E8%A7%A3%E9%97%AD%E5%8C%85.html","title":"重新理解闭包","lang":"zh-CN","frontmatter":{"title":"重新理解闭包","tag":"闭包","category":["开发笔记","JS"],"description":"闭包确实很难理解，之前我是这样理解的： 闭包指的是那些引用了另一个函数作用域中变量的函数，通常是在嵌套函数中实现的。 再后来看到这样一段话： 在函数中被使用，但它既不是函数参数、也不是函数的局部变量，而是一个不属于当前作用域的变量，此时它相对于当前作用域来说，就是一个自由变量。而引用了自由变量的函数，就叫闭包。 比如说： function fun() { let a = 123 return function () { console.log(a) } } var fuN = fun() fuN()","head":[["meta",{"property":"og:url","content":"http://magicbegin.gitee.io/vuepress-blog/%E5%BC%80%E5%8F%91%E6%97%A5%E5%BF%97/JS/%E9%87%8D%E6%96%B0%E7%90%86%E8%A7%A3%E9%97%AD%E5%8C%85.html"}],["meta",{"property":"og:site_name","content":"Mr Chen's Blog"}],["meta",{"property":"og:title","content":"重新理解闭包"}],["meta",{"property":"og:description","content":"闭包确实很难理解，之前我是这样理解的： 闭包指的是那些引用了另一个函数作用域中变量的函数，通常是在嵌套函数中实现的。 再后来看到这样一段话： 在函数中被使用，但它既不是函数参数、也不是函数的局部变量，而是一个不属于当前作用域的变量，此时它相对于当前作用域来说，就是一个自由变量。而引用了自由变量的函数，就叫闭包。 比如说： function fun() { let a = 123 return function () { console.log(a) } } var fuN = fun() fuN()"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-10-27T11:35:00.000Z"}],["meta",{"property":"article:author","content":"Mr Chen"}],["meta",{"property":"article:tag","content":"闭包"}],["meta",{"property":"article:modified_time","content":"2023-10-27T11:35:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"重新理解闭包\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-10-27T11:35:00.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr Chen\\",\\"url\\":\\"https://gitee.com/magicBegin/vuepress-blog\\",\\"email\\":\\"599422271@qq.com\\"}]}"]]},"headers":[],"git":{"createdTime":1698406500000,"updatedTime":1698406500000,"contributors":[{"name":"chenzhen","email":"599422271@qq.com","commits":1}]},"readingTime":{"minutes":1.18,"words":355},"filePathRelative":"开发日志/JS/重新理解闭包.md","localizedDate":"2023年10月27日","excerpt":"<p><code>闭包</code>确实很难理解，之前我是这样理解的：</p>\\n<p><strong>闭包指的是那些引用了另一个函数作用域中变量的函数，通常是在嵌套函数中实现的。</strong></p>\\n<p>再后来看到这样一段话：</p>\\n<p>在函数中被使用，但它既不是函数参数、也不是函数的局部变量，而是一个不属于当前作用域的变量，此时它相对于当前作用域来说，就是一个<code>自由变量</code>。而<strong>引用了自由变量的函数，就叫闭包</strong>。</p>\\n<p>比如说：</p>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token keyword\\">function</span> <span class=\\"token function\\">fun</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token keyword\\">let</span> a <span class=\\"token operator\\">=</span> <span class=\\"token number\\">123</span>\\n  <span class=\\"token keyword\\">return</span> <span class=\\"token keyword\\">function</span> <span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    console<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span>a<span class=\\"token punctuation\\">)</span>\\n  <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n<span class=\\"token keyword\\">var</span> fuN <span class=\\"token operator\\">=</span> <span class=\\"token function\\">fun</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token function\\">fuN</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{n as data};
