const n=JSON.parse(`{"key":"v-9710e106","path":"/%E5%BC%80%E5%8F%91%E6%97%A5%E5%BF%97/Vue/vue3%E5%BC%80%E5%8F%91RABC%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F.html","title":"vue3开发RABC权限管理系统","lang":"zh-CN","frontmatter":{"title":"vue3开发RABC权限管理系统","isOriginal":true,"tag":["vue3","Pinia","ElementPlus","vite","Vue-Router","RABC后台管理系统"],"category":["开发笔记","Vue"],"description":"vite 环境变量 环境变量和模式 axios 的使用 二次封装 /** * axios 二次封装 */ import axios from 'axios' import { ElMessage } from 'element-plus' // 引入路由实例 import router from '../router' import config from '../config/environmentConfig.js' import storage from '@/utils/storage.js' // 错误消息 const TOKEN_INVALID = 'Token认证失败，请重新登陆' const NETWORK_ERROR = '网络请求异常，请稍后重试' // 创建axios对象 const service = axios.create({ baseURL: config.baseApi, timeout: 10000, }) // 请求拦截 service.interceptors.request.use((req) =&gt; { // JWT if (storage.getItem('userInfo') !== undefined) { const { token } = storage.getItem('userInfo') const headers = req.headers if (!headers.Authorization) headers.Authorization = \`Bearer \${token}\` } return req }) // 响应拦截 service.interceptors.response.use((res) =&gt; { const { code, data, msg } = res.data // 状态码判断 if (code === 200) { // 请求成功 return data } else if (code === 500001) { // token认证失败 ElMessage.error(TOKEN_INVALID) // 路由跳转到登陆页面 router.push('/login') return Promise.reject(TOKEN_INVALID) } else { // 网络异常(其他情况） ElMessage.error(msg || NETWORK_ERROR) return Promise.reject(msg || NETWORK_ERROR) } }) /** * 请求核心函数 * @param options 请求配置 */ function request(options) { // 默认为get options.method = options.method || 'get' // 无论是get还是post 数据字段均为data if (options.method.toLowerCase() === 'get') options.params = options.data // 确保生产环境调取线上地址 if (config.env === 'prod') { service.defaults.baseURL = config.baseApi } else { // mock 开关 控制 开发测试环境api地址切换 service.defaults.baseURL = config.mock ? config.mockApi : config.baseApi } return service(options) } export default request","head":[["meta",{"property":"og:url","content":"http://magicbegin.gitee.io/vuepress-blog/%E5%BC%80%E5%8F%91%E6%97%A5%E5%BF%97/Vue/vue3%E5%BC%80%E5%8F%91RABC%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F.html"}],["meta",{"property":"og:site_name","content":"Mr Chen's Blog"}],["meta",{"property":"og:title","content":"vue3开发RABC权限管理系统"}],["meta",{"property":"og:description","content":"vite 环境变量 环境变量和模式 axios 的使用 二次封装 /** * axios 二次封装 */ import axios from 'axios' import { ElMessage } from 'element-plus' // 引入路由实例 import router from '../router' import config from '../config/environmentConfig.js' import storage from '@/utils/storage.js' // 错误消息 const TOKEN_INVALID = 'Token认证失败，请重新登陆' const NETWORK_ERROR = '网络请求异常，请稍后重试' // 创建axios对象 const service = axios.create({ baseURL: config.baseApi, timeout: 10000, }) // 请求拦截 service.interceptors.request.use((req) =&gt; { // JWT if (storage.getItem('userInfo') !== undefined) { const { token } = storage.getItem('userInfo') const headers = req.headers if (!headers.Authorization) headers.Authorization = \`Bearer \${token}\` } return req }) // 响应拦截 service.interceptors.response.use((res) =&gt; { const { code, data, msg } = res.data // 状态码判断 if (code === 200) { // 请求成功 return data } else if (code === 500001) { // token认证失败 ElMessage.error(TOKEN_INVALID) // 路由跳转到登陆页面 router.push('/login') return Promise.reject(TOKEN_INVALID) } else { // 网络异常(其他情况） ElMessage.error(msg || NETWORK_ERROR) return Promise.reject(msg || NETWORK_ERROR) } }) /** * 请求核心函数 * @param options 请求配置 */ function request(options) { // 默认为get options.method = options.method || 'get' // 无论是get还是post 数据字段均为data if (options.method.toLowerCase() === 'get') options.params = options.data // 确保生产环境调取线上地址 if (config.env === 'prod') { service.defaults.baseURL = config.baseApi } else { // mock 开关 控制 开发测试环境api地址切换 service.defaults.baseURL = config.mock ? config.mockApi : config.baseApi } return service(options) } export default request"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-10-27T11:35:00.000Z"}],["meta",{"property":"article:author","content":"Mr Chen"}],["meta",{"property":"article:tag","content":"vue3"}],["meta",{"property":"article:tag","content":"Pinia"}],["meta",{"property":"article:tag","content":"ElementPlus"}],["meta",{"property":"article:tag","content":"vite"}],["meta",{"property":"article:tag","content":"Vue-Router"}],["meta",{"property":"article:tag","content":"RABC后台管理系统"}],["meta",{"property":"article:modified_time","content":"2023-10-27T11:35:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"vue3开发RABC权限管理系统\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-10-27T11:35:00.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr Chen\\",\\"url\\":\\"https://gitee.com/magicBegin/vuepress-blog\\",\\"email\\":\\"599422271@qq.com\\"}]}"]]},"headers":[{"level":2,"title":"vite 环境变量","slug":"vite-环境变量","link":"#vite-环境变量","children":[]},{"level":2,"title":"axios 的使用","slug":"axios-的使用","link":"#axios-的使用","children":[{"level":3,"title":"二次封装","slug":"二次封装","link":"#二次封装","children":[]},{"level":3,"title":"组件中使用","slug":"组件中使用","link":"#组件中使用","children":[]}]},{"level":2,"title":"storage 二次封装","slug":"storage-二次封装","link":"#storage-二次封装","children":[]},{"level":2,"title":"vite 项目index.html中使用变量","slug":"vite-项目index-html中使用变量","link":"#vite-项目index-html中使用变量","children":[]},{"level":2,"title":"$响应式语法糖","slug":"响应式语法糖","link":"#响应式语法糖","children":[]},{"level":2,"title":"css 中绑定变量","slug":"css-中绑定变量","link":"#css-中绑定变量","children":[]},{"level":2,"title":"路径别名","slug":"路径别名","link":"#路径别名","children":[]},{"level":2,"title":"props","slug":"props","link":"#props","children":[]},{"level":2,"title":"动态组件","slug":"动态组件","link":"#动态组件","children":[]},{"level":2,"title":"递归组件","slug":"递归组件","link":"#递归组件","children":[]},{"level":2,"title":"JWT","slug":"jwt","link":"#jwt","children":[]},{"level":2,"title":"面包屑导航","slug":"面包屑导航","link":"#面包屑导航","children":[]},{"level":2,"title":"重置 elementPlus 颜色主题","slug":"重置-elementplus-颜色主题","link":"#重置-elementplus-颜色主题","children":[]},{"level":2,"title":"路由切换动画踩坑","slug":"路由切换动画踩坑","link":"#路由切换动画踩坑","children":[]},{"level":2,"title":"按钮权限控制实现","slug":"按钮权限控制实现","link":"#按钮权限控制实现","children":[]},{"level":2,"title":"404页面开发","slug":"_404页面开发","link":"#_404页面开发","children":[]},{"level":2,"title":"动态路由","slug":"动态路由","link":"#动态路由","children":[]},{"level":2,"title":"实现全局标签页","slug":"实现全局标签页","link":"#实现全局标签页","children":[]},{"level":2,"title":"造轮子: Hangfan-Vue-Template","slug":"造轮子-hangfan-vue-template","link":"#造轮子-hangfan-vue-template","children":[{"level":3,"title":"公共组件：公共大表哥","slug":"公共组件-公共大表哥","link":"#公共组件-公共大表哥","children":[]},{"level":3,"title":"脚手架开发","slug":"脚手架开发","link":"#脚手架开发","children":[]}]}],"git":{"createdTime":1698406500000,"updatedTime":1698406500000,"contributors":[{"name":"chenzhen","email":"599422271@qq.com","commits":1}]},"readingTime":{"minutes":9.37,"words":2812},"filePathRelative":"开发日志/Vue/vue3开发RABC权限管理系统.md","localizedDate":"2023年10月27日","excerpt":"<h2> vite 环境变量</h2>\\n<p><a href=\\"https://cn.vitejs.dev/guide/env-and-mode.html#env-variables\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">环境变量和模式</a></p>\\n<h2> axios 的使用</h2>\\n<h3> 二次封装</h3>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token doc-comment comment\\">/**\\n * axios 二次封装\\n */</span>\\n<span class=\\"token keyword\\">import</span> axios <span class=\\"token keyword\\">from</span> <span class=\\"token string\\">'axios'</span>\\n<span class=\\"token keyword\\">import</span> <span class=\\"token punctuation\\">{</span> ElMessage <span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">from</span> <span class=\\"token string\\">'element-plus'</span>\\n<span class=\\"token comment\\">// 引入路由实例</span>\\n<span class=\\"token keyword\\">import</span> router <span class=\\"token keyword\\">from</span> <span class=\\"token string\\">'../router'</span>\\n<span class=\\"token keyword\\">import</span> config <span class=\\"token keyword\\">from</span> <span class=\\"token string\\">'../config/environmentConfig.js'</span>\\n<span class=\\"token keyword\\">import</span> storage <span class=\\"token keyword\\">from</span> <span class=\\"token string\\">'@/utils/storage.js'</span>\\n\\n<span class=\\"token comment\\">// 错误消息</span>\\n<span class=\\"token keyword\\">const</span> <span class=\\"token constant\\">TOKEN_INVALID</span> <span class=\\"token operator\\">=</span> <span class=\\"token string\\">'Token认证失败，请重新登陆'</span>\\n<span class=\\"token keyword\\">const</span> <span class=\\"token constant\\">NETWORK_ERROR</span> <span class=\\"token operator\\">=</span> <span class=\\"token string\\">'网络请求异常，请稍后重试'</span>\\n<span class=\\"token comment\\">// 创建axios对象</span>\\n<span class=\\"token keyword\\">const</span> service <span class=\\"token operator\\">=</span> axios<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">create</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token literal-property property\\">baseURL</span><span class=\\"token operator\\">:</span> config<span class=\\"token punctuation\\">.</span>baseApi<span class=\\"token punctuation\\">,</span>\\n  <span class=\\"token literal-property property\\">timeout</span><span class=\\"token operator\\">:</span> <span class=\\"token number\\">10000</span><span class=\\"token punctuation\\">,</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n\\n<span class=\\"token comment\\">// 请求拦截</span>\\nservice<span class=\\"token punctuation\\">.</span>interceptors<span class=\\"token punctuation\\">.</span>request<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">use</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">req</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token comment\\">// JWT</span>\\n  <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>storage<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">getItem</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'userInfo'</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">!==</span> <span class=\\"token keyword\\">undefined</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">const</span> <span class=\\"token punctuation\\">{</span> token <span class=\\"token punctuation\\">}</span> <span class=\\"token operator\\">=</span> storage<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">getItem</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'userInfo'</span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token keyword\\">const</span> headers <span class=\\"token operator\\">=</span> req<span class=\\"token punctuation\\">.</span>headers\\n    <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span><span class=\\"token operator\\">!</span>headers<span class=\\"token punctuation\\">.</span>Authorization<span class=\\"token punctuation\\">)</span> headers<span class=\\"token punctuation\\">.</span>Authorization <span class=\\"token operator\\">=</span> <span class=\\"token template-string\\"><span class=\\"token template-punctuation string\\">\`</span><span class=\\"token string\\">Bearer </span><span class=\\"token interpolation\\"><span class=\\"token interpolation-punctuation punctuation\\">\${</span>token<span class=\\"token interpolation-punctuation punctuation\\">}</span></span><span class=\\"token template-punctuation string\\">\`</span></span>\\n  <span class=\\"token punctuation\\">}</span>\\n  <span class=\\"token keyword\\">return</span> req\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n\\n<span class=\\"token comment\\">// 响应拦截</span>\\nservice<span class=\\"token punctuation\\">.</span>interceptors<span class=\\"token punctuation\\">.</span>response<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">use</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">res</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token keyword\\">const</span> <span class=\\"token punctuation\\">{</span> code<span class=\\"token punctuation\\">,</span> data<span class=\\"token punctuation\\">,</span> msg <span class=\\"token punctuation\\">}</span> <span class=\\"token operator\\">=</span> res<span class=\\"token punctuation\\">.</span>data\\n  <span class=\\"token comment\\">// 状态码判断</span>\\n  <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>code <span class=\\"token operator\\">===</span> <span class=\\"token number\\">200</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token comment\\">// 请求成功</span>\\n    <span class=\\"token keyword\\">return</span> data\\n  <span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">else</span> <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>code <span class=\\"token operator\\">===</span> <span class=\\"token number\\">500001</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token comment\\">// token认证失败</span>\\n    ElMessage<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">error</span><span class=\\"token punctuation\\">(</span><span class=\\"token constant\\">TOKEN_INVALID</span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token comment\\">// 路由跳转到登陆页面</span>\\n    router<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">push</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'/login'</span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token keyword\\">return</span> Promise<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">reject</span><span class=\\"token punctuation\\">(</span><span class=\\"token constant\\">TOKEN_INVALID</span><span class=\\"token punctuation\\">)</span>\\n  <span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">else</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token comment\\">// 网络异常(其他情况）</span>\\n    ElMessage<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">error</span><span class=\\"token punctuation\\">(</span>msg <span class=\\"token operator\\">||</span> <span class=\\"token constant\\">NETWORK_ERROR</span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token keyword\\">return</span> Promise<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">reject</span><span class=\\"token punctuation\\">(</span>msg <span class=\\"token operator\\">||</span> <span class=\\"token constant\\">NETWORK_ERROR</span><span class=\\"token punctuation\\">)</span>\\n  <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n\\n<span class=\\"token doc-comment comment\\">/**\\n * 请求核心函数\\n * <span class=\\"token keyword\\">@param</span> <span class=\\"token parameter\\">options</span> 请求配置\\n */</span>\\n<span class=\\"token keyword\\">function</span> <span class=\\"token function\\">request</span><span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">options</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token comment\\">// 默认为get</span>\\n  options<span class=\\"token punctuation\\">.</span>method <span class=\\"token operator\\">=</span> options<span class=\\"token punctuation\\">.</span>method <span class=\\"token operator\\">||</span> <span class=\\"token string\\">'get'</span>\\n  <span class=\\"token comment\\">// 无论是get还是post 数据字段均为data</span>\\n  <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>options<span class=\\"token punctuation\\">.</span>method<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">toLowerCase</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">===</span> <span class=\\"token string\\">'get'</span><span class=\\"token punctuation\\">)</span> options<span class=\\"token punctuation\\">.</span>params <span class=\\"token operator\\">=</span> options<span class=\\"token punctuation\\">.</span>data\\n  <span class=\\"token comment\\">// 确保生产环境调取线上地址</span>\\n  <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>config<span class=\\"token punctuation\\">.</span>env <span class=\\"token operator\\">===</span> <span class=\\"token string\\">'prod'</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    service<span class=\\"token punctuation\\">.</span>defaults<span class=\\"token punctuation\\">.</span>baseURL <span class=\\"token operator\\">=</span> config<span class=\\"token punctuation\\">.</span>baseApi\\n  <span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">else</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token comment\\">// mock 开关 控制 开发测试环境api地址切换</span>\\n    service<span class=\\"token punctuation\\">.</span>defaults<span class=\\"token punctuation\\">.</span>baseURL <span class=\\"token operator\\">=</span> config<span class=\\"token punctuation\\">.</span>mock <span class=\\"token operator\\">?</span> config<span class=\\"token punctuation\\">.</span>mockApi <span class=\\"token operator\\">:</span> config<span class=\\"token punctuation\\">.</span>baseApi\\n  <span class=\\"token punctuation\\">}</span>\\n  <span class=\\"token keyword\\">return</span> <span class=\\"token function\\">service</span><span class=\\"token punctuation\\">(</span>options<span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token keyword\\">export</span> <span class=\\"token keyword\\">default</span> request\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{n as data};
