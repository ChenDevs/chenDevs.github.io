const e=JSON.parse(`{"key":"v-76bfbc3c","path":"/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/%E8%BD%AC%E8%BD%BD/vuex%E5%92%8Credux%E7%9A%84%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96%E7%BC%93%E5%AD%98%E6%96%B9%E6%A1%88.html","title":"vuex","lang":"zh-CN","frontmatter":{"icon":"pen-to-square","date":"2019-12-19T00:00:00.000Z","category":["转载"],"tag":["随笔"],"description":"vuex vuex-persist Vuex 解决了多视图之间的数据共享问题。但是运用过程中又带来了一个新的问题是，Vuex 的状态存储并不能持久化。也就是说当你存储在 Vuex 中的 store 里的数据，只要一刷新页面，数据就丢失了。 引入vuex-persist 插件，它就是为 Vuex 持久化存储而生的一个插件。不需要你手动存取 storage ，而是直接将状态保存至 cookie 或者 localStorage 中。具体用法如下：","head":[["meta",{"property":"og:url","content":"http://magicbegin.gitee.io/vuepress-blog/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/%E8%BD%AC%E8%BD%BD/vuex%E5%92%8Credux%E7%9A%84%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96%E7%BC%93%E5%AD%98%E6%96%B9%E6%A1%88.html"}],["meta",{"property":"og:site_name","content":"Mr Chen's Blog"}],["meta",{"property":"og:title","content":"vuex"}],["meta",{"property":"og:description","content":"vuex vuex-persist Vuex 解决了多视图之间的数据共享问题。但是运用过程中又带来了一个新的问题是，Vuex 的状态存储并不能持久化。也就是说当你存储在 Vuex 中的 store 里的数据，只要一刷新页面，数据就丢失了。 引入vuex-persist 插件，它就是为 Vuex 持久化存储而生的一个插件。不需要你手动存取 storage ，而是直接将状态保存至 cookie 或者 localStorage 中。具体用法如下："}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-10-27T11:35:00.000Z"}],["meta",{"property":"article:author","content":"Mr Chen"}],["meta",{"property":"article:tag","content":"随笔"}],["meta",{"property":"article:published_time","content":"2019-12-19T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-10-27T11:35:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"vuex\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2019-12-19T00:00:00.000Z\\",\\"dateModified\\":\\"2023-10-27T11:35:00.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr Chen\\",\\"url\\":\\"https://gitee.com/magicBegin/vuepress-blog\\",\\"email\\":\\"599422271@qq.com\\"}]}"]]},"headers":[{"level":2,"title":"vuex-persist","slug":"vuex-persist","link":"#vuex-persist","children":[]},{"level":2,"title":"利用 storage 存储 解决防止刷新页面 vuex store 丢失的问题","slug":"利用-storage-存储-解决防止刷新页面-vuex-store-丢失的问题","link":"#利用-storage-存储-解决防止刷新页面-vuex-store-丢失的问题","children":[]},{"level":2,"title":"redux-persist","slug":"redux-persist","link":"#redux-persist","children":[]}],"git":{"createdTime":1698406500000,"updatedTime":1698406500000,"contributors":[{"name":"chenzhen","email":"599422271@qq.com","commits":1}]},"readingTime":{"minutes":3.67,"words":1101},"filePathRelative":"前端开发/转载/vuex和redux的数据持久化缓存方案.md","localizedDate":"2019年12月19日","excerpt":"<h1> vuex</h1>\\n<h2> vuex-persist</h2>\\n<p>Vuex 解决了多视图之间的数据共享问题。但是运用过程中又带来了一个新的问题是，Vuex 的状态存储并不能持久化。也就是说当你存储在 Vuex 中的 store 里的数据，只要一刷新页面，数据就丢失了。</p>\\n<p>引入<a href=\\"https://github.com/championswimmer/vuex-persist\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">vuex-persist</a> 插件，它就是为 Vuex 持久化存储而生的一个插件。不需要你手动存取 storage ，而是直接将状态保存至 cookie 或者 localStorage 中。具体用法如下：</p>","autoDesc":true}`);export{e as data};
