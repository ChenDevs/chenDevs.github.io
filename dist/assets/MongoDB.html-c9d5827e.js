import{_ as p}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as l,c as i,b as n,d as s,a as e,e as t}from"./app-1c034ca0.js";const c={},r=t('<h1 id="mongodb" tabindex="-1"><a class="header-anchor" href="#mongodb" aria-hidden="true">#</a> MongoDB</h1><h2 id="mongodb-1" tabindex="-1"><a class="header-anchor" href="#mongodb-1" aria-hidden="true">#</a> MongoDB</h2><h3 id="一-mongodb-介绍" tabindex="-1"><a class="header-anchor" href="#一-mongodb-介绍" aria-hidden="true">#</a> 一. MongoDB 介绍:</h3><p>MongoDB 是一个跨平台，面向文档的数据库，高性能，高可用性和易于扩展。</p><h3 id="二、三个概念" tabindex="-1"><a class="header-anchor" href="#二、三个概念" aria-hidden="true">#</a> 二、三个概念</h3><ul><li>数据库:数据库是一个集合的物理容器,一个单一的 MongoDB 服务器通常有多个数据库。</li><li>集合:集合是一组 MongoDB 的文件。简单理解就是一个数组</li><li>文档 : 文档是一组键值对。(可以认为是 json 格式,但其实是 bson, bson 基于 json 格式) <img src="http://blog.csdn.net/z69183787/article/details/26709505" alt="bson 和 json 的区别"></li></ul><h3 id="三、为什么选择-mongodb" tabindex="-1"><a class="header-anchor" href="#三、为什么选择-mongodb" aria-hidden="true">#</a> 三、为什么选择 MongoDB?</h3><ul><li>学习成本较低</li><li>和 Node.js 结合最好, 对 javascript 兼容较好</li></ul><h3 id="四、官网链接" tabindex="-1"><a class="header-anchor" href="#四、官网链接" aria-hidden="true">#</a> 四、官网链接:</h3><p><img src="https://www.mongodb.com/" alt="英文官网 - https://www.mongodb.com/"><img src="https://www.mongodb.com/cn" alt="中文官网 - https://www.mongodb.com/cn"><img src="http://www.runoob.com/mongodb/mongodb-tutorial.html" alt="菜鸟教程 - http://www.runoob.com/mongodb/mongodb-tutorial.html"></p><h3 id="五、安装" tabindex="-1"><a class="header-anchor" href="#五、安装" aria-hidden="true">#</a> 五、安装:</h3><h5 id="★-win-安装-推荐下载安装" tabindex="-1"><a class="header-anchor" href="#★-win-安装-推荐下载安装" aria-hidden="true">#</a> ★ win 安装: ( 推荐下载安装 )</h5>',12),u=n("li",null,"下载安装; RuanJain",-1),d={href:"https://www.mongodb.com/cn",target:"_blank",rel:"noopener noreferrer"},k=n("h5",{id:"★-mac-安装-推荐在线安装",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#★-mac-安装-推荐在线安装","aria-hidden":"true"},"#"),s(" ★ mac 安装 : ( 推荐在线安装 )")],-1),m={id:"安装-home-brew",tabindex:"-1"},v=n("a",{class:"header-anchor",href:"#安装-home-brew","aria-hidden":"true"},"#",-1),b={href:"https://brew.sh/",target:"_blank",rel:"noopener noreferrer"},g=t(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>/usr/bin/ruby <span class="token parameter variable">-e</span> <span class="token string">&quot;<span class="token variable"><span class="token variable">$(</span><span class="token function">curl</span> <span class="token parameter variable">-fsSL</span> https://raw.githubusercontent.com/Homebrew/install/master/install<span class="token variable">)</span></span>&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,1),h=t(`<li><p>测试 brew 安装是否成功:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>brew <span class="token parameter variable">-v</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>更新 brew</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>brew update
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>安装 MongoDB</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>brew <span class="token function">install</span> mongodb --with-openssl
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>检查:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>mongo <span class="token parameter variable">--version</span>

//显示如下代表成功:
MongoDB shell version v3.4.7
<span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>`,4),f=n("h3",{id:"六、-启动、连接-mongodb-服务器-win-版",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#六、-启动、连接-mongodb-服务器-win-版","aria-hidden":"true"},"#"),s(" 六、 启动、连接 mongodb 服务器: ( Win 版 )")],-1),y={href:"https://docs.mongodb.com/manual/tutorial/install-mongodb-on-windows/",target:"_blank",rel:"noopener noreferrer"},w={href:"https://docs.mongodb.com/manual/tutorial/install-mongodb-on-os-x/?_ga=2.176735077.1185746849.1509691062-1923881747.1503743759#run-mongodb",target:"_blank",rel:"noopener noreferrer"},q=t(`<h5 id="一-、启动数据库-服务器" tabindex="-1"><a class="header-anchor" href="#一-、启动数据库-服务器" aria-hidden="true">#</a> (一)、启动数据库 服务器:</h5><ul><li>1.手动创建目录 <code>c:\\data\\db\\</code></li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>  <span class="token comment">#  - 如果使用这个路径 \`c:\\data\\db\\\\\`,就可以直接使用第二步,</span>

  <span class="token comment">#  -  else</span>
  <span class="token comment">#  - 在启动的时候，可以通过 --dbpath 指定数据服务存储数据的目录  // 目录可以通知点击地址栏获取</span>
  mongod <span class="token parameter variable">--dbpath</span> D:<span class="token punctuation">\\</span>mongo-data

  <span class="token comment">#  -  如果不加--dbpath, mongod 会自动使用 \`执行命令所属磁盘根目录\`下面的/data/db 目录作为自己的数据存储路径，</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>2.创建环境变量，右键我的电脑--&gt;属性--&gt;高级系统设置--&gt;环境变量--&gt;新建--&gt;把 mongodb 的 bin 目录复制，然后点击确定</p></li><li><p>3.在命令行输入 <strong>mongod</strong> 启动服务 (注意 : 不是 mongodb 也不是 mongo)</p></li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>  <span class="token comment">#  &gt; mongod   mac 下 要使用 sudo mongod</span>
  <span class="token comment">#  // 如果出现下面这句话才算 OK</span>
  <span class="token comment">#  &gt; ....  waiting for connections on port 27017</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>4.**[ 切记 ] **停止服务：按 ctr + c，不要直接通过关闭 cmd 窗口的方式来关闭 <ul><li>任务管理器 关闭进程</li><li>找到 <code>mongod.lock</code> 删掉</li></ul></li></ul><h5 id="二-、连接数据库-服务器" tabindex="-1"><a class="header-anchor" href="#二-、连接数据库-服务器" aria-hidden="true">#</a> (二)、连接数据库 服务器:</h5><ol><li>再打开一个 cmd 窗口</li><li>通过 <strong>mongo</strong> 命令连接数据库服务器</li><li>mongo 命令默认去连接本机上的 MongoDB 服务实例：<code>127.0.0.1:27017</code></li><li>也可以通过下面的命令，指定连接的主机名和端口号：</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>mongo <span class="token parameter variable">--host</span> <span class="token number">127.0</span>.0.1 <span class="token parameter variable">--port</span> <span class="token number">27017</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h5 id="三-、操作数据库-服务器-见基本操作命令" tabindex="-1"><a class="header-anchor" href="#三-、操作数据库-服务器-见基本操作命令" aria-hidden="true">#</a> (三)、操作数据库 服务器: {见基本操作命令}</h5><h3 id="七、-开启、连接-mongodb-服务器-mac-版" tabindex="-1"><a class="header-anchor" href="#七、-开启、连接-mongodb-服务器-mac-版" aria-hidden="true">#</a> 七、 开启、连接 mongodb 服务器: ( Mac 版)</h3><figure><img src="https://docs.mongodb.com/manual/tutorial/install-mongodb-on-windows/" alt="win-mongodb 使用" tabindex="0"><figcaption>win-mongodb 使用</figcaption></figure><figure><img src="https://docs.mongodb.com/manual/tutorial/install-mongodb-on-os-x/?_ga=2.176735077.1185746849.1509691062-1923881747.1503743759#run-mongodb" alt="mac-mongodb 使用" tabindex="0"><figcaption>mac-mongodb 使用</figcaption></figure><h5 id="一-、启动数据库-服务器-1" tabindex="-1"><a class="header-anchor" href="#一-、启动数据库-服务器-1" aria-hidden="true">#</a> (一)、启动数据库 服务器:</h5><ul><li><ol><li>创建 <code>/data/db</code> 目录 ;</li></ol></li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>  <span class="token comment"># 代码执行</span>
  <span class="token function">sudo</span> <span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /data/db   //sudo 提高权限    目录在 Finder/左侧设备/XXX/Machintosh/data/db
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><ol start="2"><li>开启数据库服务器:</li></ol></li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>  <span class="token comment">#  开启</span>
  <span class="token function">sudo</span> mongod

  <span class="token keyword">else</span> <span class="token punctuation">..</span><span class="token punctuation">..</span>
  <span class="token comment"># ------------ 指定路径分割线 -----------</span>
  <span class="token comment"># // 指定路径开启</span>
  <span class="token comment"># 1. 创建一个目录: mongodb-data</span>
  <span class="token function">sudo</span> mongod <span class="token parameter variable">--dbpath</span> <span class="token comment"># [把文件夹直接拖进来]</span>

  <span class="token comment"># //开启成功:--- 正确分割线-----------</span>
  <span class="token comment">#  : waiting for connections on port 27017</span>
  <span class="token comment"># --------------错误分割线-----------</span>
  <span class="token comment"># //千万要注意: 一定要正常退出,,不要直接 X 掉终端,,没用的,,下次开开启开不了,用也用不了</span>
  <span class="token comment"># // 如果报错已经在 use : addr already use, 说明就是</span>
  <span class="token comment"># // 查看当前进程</span>
  <span class="token function">ps</span> <span class="token parameter variable">-aef</span> <span class="token operator">|</span> <span class="token function">grep</span> mongo
  //显示
  <span class="token number">501</span> <span class="token number">10576</span> <span class="token number">6955</span> <span class="token number">0</span> <span class="token number">5</span>:44下午 ttys002   <span class="token number">0</span>:00.0 <span class="token function">grep</span> mongo
  //杀掉进程: <span class="token punctuation">(</span>不要杀 PID 是1的--那是关机<span class="token punctuation">)</span>
  <span class="token function">sudo</span> <span class="token function">kill</span> <span class="token number">6955</span>
  // 杀到后,找到 MacintoshHD 的 data/db 里面全部删掉,再次重启:
  <span class="token function">sudo</span> mongod 即可
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><ol start="3"><li>**[ 切记 ]**停止服务：</li></ol><ul><li>按 cmd + c，不要直接通过关闭终端 窗口的方式来关闭</li></ul><p>​</p><h5 id="二-、连接数据库-服务器-1" tabindex="-1"><a class="header-anchor" href="#二-、连接数据库-服务器-1" aria-hidden="true">#</a> (二)、连接数据库 服务器:</h5></li><li><p>再打开一个终端窗口</p></li><li><p>执行<code>mongo</code>命令,连接数据库服务器</p></li><li><p>mongo 命令,默认去连接本机上的 MongoDB 服务实例: <code>127.0.0.1:27017</code> {一定要记住这个端口号}</p></li><li><p>也可以通过下面的命令,指定连接的主机名和端口号:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>mongo <span class="token operator">--</span>host <span class="token number">127.0</span><span class="token number">.0</span><span class="token number">.1</span> <span class="token operator">--</span>port <span class="token number">27017</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>提示：如果提示 “无法连接主机”，请检查你的 MongoDB 数据服务实例是否开启。</p></blockquote></li></ul><p>​ (三)、操作数据库 服务器: {见基本操作命令}</p><h5 id="总结" tabindex="-1"><a class="header-anchor" href="#总结" aria-hidden="true">#</a> 总结:</h5><ol><li><h5 id="开启数据库服务器-mongod-sudo-mongod" tabindex="-1"><a class="header-anchor" href="#开启数据库服务器-mongod-sudo-mongod" aria-hidden="true">#</a> 开启数据库服务器: <code>mongod</code> / <code>sudo mongod</code></h5></li><li><h5 id="连接-mongo" tabindex="-1"><a class="header-anchor" href="#连接-mongo" aria-hidden="true">#</a> 连接....................: <code>mongo</code></h5></li><li><h5 id="关闭-ctr-c" tabindex="-1"><a class="header-anchor" href="#关闭-ctr-c" aria-hidden="true">#</a> 关闭....................: <code>Ctr+C</code></h5></li></ol><h3 id="八、基本操作命令" tabindex="-1"><a class="header-anchor" href="#八、基本操作命令" aria-hidden="true">#</a> 八、基本操作命令</h3><h3 id="_1-查看服务器里所有的数据库-show-dbs" tabindex="-1"><a class="header-anchor" href="#_1-查看服务器里所有的数据库-show-dbs" aria-hidden="true">#</a> 1. 查看服务器里所有的数据库 : <code>show dbs</code></h3><ul><li><div class="language-BASH line-numbers-mode" data-ext="BASH"><pre class="language-BASH"><code>&gt; show dbs
admin       0.000GB
hackernews  0.000GB
local       0.000GB
test1104    0.000GB
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h3 id="_2-切换-创建数据库-use-数据库名称" tabindex="-1"><a class="header-anchor" href="#_2-切换-创建数据库-use-数据库名称" aria-hidden="true">#</a> 2. 切换 / 创建数据库 : <code>use 数据库名称</code></h3><ul><li>如果在创建的数据库里,不创建集合, 辣么,退出后,数据库也就消失了;</li></ul><ul><li><p>(简单了解即可) 连接到数据库之后，默认有一个变量叫做：db，终端默认把 db 赋值给了 test</p></li><li><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">&gt;</span> use test1104
switched to db test1104
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h3 id="_3-查看当前所处的数据库-db" tabindex="-1"><a class="header-anchor" href="#_3-查看当前所处的数据库-db" aria-hidden="true">#</a> 3. 查看当前所处的数据库 : <code>db</code></h3><ul><li><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">&gt;</span> db
test1104    <span class="token comment">//(如果没有指定具体的数据库就会返回一个测试的: test)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h3 id="_4-操作命令-增删改查" tabindex="-1"><a class="header-anchor" href="#_4-操作命令-增删改查" aria-hidden="true">#</a> 4.操作命令(增删改查)</h3><h4 id="_4-1-查询" tabindex="-1"><a class="header-anchor" href="#_4-1-查询" aria-hidden="true">#</a> 4.1 查询</h4><blockquote><p>查看当前数据库中所有的集合 : <code>show collections</code></p></blockquote><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>show collections
   <span class="token comment">//aaa</span>
   <span class="token comment">//news</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>查询该集合中的所有数据 : <code>db.集合名称.find()</code></p></blockquote><ul><li>可以通过 <code>db.集合名称.find().pretty()</code> 美化输出格式 (如果属性少就不会显示美化格式)</li><li>默认是查询所有，可以通过：<code>db.集合名称.find({查询条件})</code> 按条件查询集合中的数据</li></ul><blockquote><p>根据条件查询该集合某一条/多条数据: <code>db. 集合. find(条件)</code> [具体查询]</p></blockquote><p>查看具体数据</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>  <span class="token comment">// gt: greate than</span>
  <span class="token comment">// lt: less than</span>
  <span class="token comment">// e: equal</span>
  <span class="token comment">// ne: not equal</span>
  <span class="token operator">&gt;</span> db<span class="token punctuation">.</span>aaa<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">age</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token literal-property property">$gte</span><span class="token operator">:</span><span class="token number">18</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span>   <span class="token comment">// 查看 age &gt;= 18 的</span>
  <span class="token punctuation">{</span> <span class="token string-property property">&quot;_id&quot;</span> <span class="token operator">:</span> <span class="token function">ObjectId</span><span class="token punctuation">(</span><span class="token string">&quot;59fcb97f6208a88400da6d65&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string-property property">&quot;name&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;xingge&quot;</span><span class="token punctuation">,</span> <span class="token string-property property">&quot;age&quot;</span> <span class="token operator">:</span> <span class="token number">18</span> <span class="token punctuation">}</span>
  <span class="token punctuation">{</span> <span class="token string-property property">&quot;_id&quot;</span> <span class="token operator">:</span> <span class="token function">ObjectId</span><span class="token punctuation">(</span><span class="token string">&quot;59fcbee26208a88400da6d69&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string-property property">&quot;nage&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;huge&quot;</span><span class="token punctuation">,</span> <span class="token string-property property">&quot;age&quot;</span> <span class="token operator">:</span> <span class="token number">19</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-2-新增" tabindex="-1"><a class="header-anchor" href="#_4-2-新增" aria-hidden="true">#</a> 4.2 新增</h4><blockquote><p>创建集合并插入<code>一条</code> 数据 :</p></blockquote><ul><li><code>db. 集合名称. insertOne ( 数据文档 )</code></li></ul><blockquote><p>创建集合并插入<code>多条</code> 数据 :</p></blockquote><ul><li><p><code>db. 集合名称. insertMany ( 数据文档 )</code></p></li><li><p>如果没有集合就创建,</p></li><li><p>如果有集合,就直接插入数据</p></li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>  <span class="token comment">// 1. 插入一条</span>
  <span class="token operator">&gt;</span> db<span class="token punctuation">.</span>news<span class="token punctuation">.</span><span class="token function">insertOne</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">id</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">title</span><span class="token operator">:</span><span class="token string">&quot;news title&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">url</span><span class="token operator">:</span><span class="token string">&quot;http://www.baidu.com&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">text</span><span class="token operator">:</span><span class="token string">&quot;百度一下，你就知道&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token operator">&gt;</span> <span class="token function">WriteResult</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token string-property property">&quot;nInserted&quot;</span> <span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>   <span class="token comment">// insert 成功</span>

  <span class="token comment">// 2. 插入多条  [{},{},{}]  数组里有对象</span>
  db<span class="token punctuation">.</span>news01<span class="token punctuation">.</span><span class="token function">insertMany</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
    <span class="token punctuation">{</span> <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&quot;张三&quot;</span><span class="token punctuation">,</span>  <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">&#39;www.zhangsan.com&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">text</span><span class="token operator">:</span><span class="token string">&#39;我是张三,谁与我争雄&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&quot;李四&quot;</span><span class="token punctuation">,</span>  <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">&#39;www.lisi.com&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">text</span><span class="token operator">:</span><span class="token string">&#39;我是李四,我不爱女人,只爱妖妖&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&quot;王五&quot;</span><span class="token punctuation">,</span>  <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">&#39;www.wangwu.com&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">text</span><span class="token operator">:</span><span class="token string">&#39;我住隔壁,我姓王&#39;</span><span class="token punctuation">}</span>
  <span class="token punctuation">]</span><span class="token punctuation">)</span>
  <span class="token operator">&gt;</span> <span class="token punctuation">{</span>                  <span class="token comment">// 插入多条成功</span>
  	<span class="token string-property property">&quot;acknowledged&quot;</span> <span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  	<span class="token string-property property">&quot;insertedIds&quot;</span> <span class="token operator">:</span> <span class="token punctuation">[</span>
  		<span class="token function">ObjectId</span><span class="token punctuation">(</span><span class="token string">&quot;59fcc3f96208a88400da6d6e&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  		<span class="token function">ObjectId</span><span class="token punctuation">(</span><span class="token string">&quot;59fcc3f96208a88400da6d6f&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  		<span class="token function">ObjectId</span><span class="token punctuation">(</span><span class="token string">&quot;59fcc3f96208a88400da6d70&quot;</span><span class="token punctuation">)</span>
  	<span class="token punctuation">]</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-3-更新" tabindex="-1"><a class="header-anchor" href="#_4-3-更新" aria-hidden="true">#</a> 4.3 更新</h4><blockquote><p>更新指定集合数据 :</p></blockquote><ul><li><p><code>db.集合名称.update({更新条件},{$set:{要更新的字段}})</code></p></li><li><p>更新指定集合数据</p></li><li><p>满足一个条件的多个数据修改,还要在后面添加 ,<code>{multi:true}</code></p></li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>aaa<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">18</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">$set</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;xiaomage&#39;</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">multi</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">WriteResult</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">nMatched</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token literal-property property">nUpserted</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token literal-property property">nModified</span><span class="token operator">:</span> <span class="token number">2</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//更新成功</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-4-删除" tabindex="-1"><a class="header-anchor" href="#_4-4-删除" aria-hidden="true">#</a> 4.4 删除</h4><blockquote><p>删除集合的某个文档 :</p></blockquote><ul><li><code>db.集合名称.remove({删除条件})</code></li><li>删除指定集合中的数据</li></ul><blockquote><p>删除集合:</p></blockquote><ul><li><p><code>db.集合名称.drop()</code></p></li><li><p>参考文档：https://docs.mongodb.com/manual/crud/</p></li><li><p>参考文档:http://www.runoob.com/mongodb/mongodb-update.html (推荐)</p></li></ul><h3 id="九、node-js-操作-mongodb-—-使用-mongodb-驱动器" tabindex="-1"><a class="header-anchor" href="#九、node-js-操作-mongodb-—-使用-mongodb-驱动器" aria-hidden="true">#</a> 九、Node.js 操作 MongoDB — 使用 MongoDB 驱动器</h3><blockquote><p>这个 mongodb 是 MongoDB 驱动器 (driver) ,帮助 nodejs 来操作 mongo 数据库的,虽然名字一样,但是实质不一样</p></blockquote><ol><li><p>Quick Start 参考文档:</p><p><img src="http://mongodb.github.io/node-mongodb-native/2.2/quick-start/quick-start/" alt="MongoDB - Quick Start"> —&gt;找: Connect to MongoDB <img src="https://www.npmjs.com/package/mongodb#connecting-to-mongodb" alt="npmj- Quick Start"> —&gt; 找: Connecting to MongoDB <img src="http://www.runoob.com/mongodb/mongodb-remove.html" alt="菜鸟教程"></p></li><li><p>安装:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>npm init <span class="token operator">-</span>y   <span class="token comment">//初始化包配置文件</span>
npm i mongodb <span class="token operator">-</span><span class="token constant">SD</span>   <span class="token comment">//安装</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>前提:<strong>开启数据库服务器</strong> : 终端开启<code>MongoDB 服务器</code> : 执行:<code>mongod</code> / <code>mongod -dbpath 新路径</code></p><ul><li>如果是 mac 记得加 <code>sudo</code>: <code>sudo mongod</code></li><li>检查是否操作成功: 可以打开 <code>mongo 查看</code></li></ul></li><li><p>CRUD [增删改查]</p></li></ol><h3 id="十、-crud-增删改查" tabindex="-1"><a class="header-anchor" href="#十、-crud-增删改查" aria-hidden="true">#</a> 十、 CRUD (增删改查)</h3><ol start="0"><li><p>连接数据库服务器:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//1. 加载 mongodb</span>
<span class="token keyword">var</span> mongodb <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;mongodb&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//2. 获取一个连接数据库的对象 MongoClient</span>
<span class="token keyword">var</span> MongoClient <span class="token operator">=</span> mongodb<span class="token punctuation">.</span>MongoClient<span class="token punctuation">;</span>

<span class="token comment">//3. 连接字符换   连接到数据库进程 数据db01里</span>
<span class="token comment">// var url = &#39;http://127.0.0.1....&#39;</span>
<span class="token keyword">var</span> url <span class="token operator">=</span> <span class="token string">&#39;mongodb://127.0.0.1:27017&#39;</span><span class="token punctuation">;</span>

<span class="token comment">//4. 开始连接</span>
<span class="token comment">/// [注意]一定要注意,终端开启数据库服务器 sudo mongod</span>
MongoClient<span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> client</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">throw</span> err<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;连接上了数据库&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">//5. 一定要关闭</span>
  client<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>​</p></li><li><p>插入单条数据</p><ul><li><p>使用方法:</p><p>** client.db(&#39;数据库名称&#39;). collection(集合名称) . insertOne ( { 数据 } , callback(err) ) **</p></li></ul></li></ol><ul><li>insert( {数据 }, callback ) — 已经废弃</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//1. 插入单条数据</span>
<span class="token comment">// [注意1] 插入数据是异步的  所以要有个回调函数</span>
<span class="token comment">// [注意2] insert() 在 3.2版本之后,已经慢慢被废弃,插入单条的话</span>
<span class="token comment">//    使用 insetOne()</span>
db<span class="token punctuation">.</span><span class="token function">collection</span><span class="token punctuation">(</span><span class="token string">&#39;heros&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">insertOne</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;星哥&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">18</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> doc</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">throw</span> err<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>doc<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">//{ result: { ok: 1, n: 1 },</span>
  <span class="token comment">// ops: [ { name: &#39;星哥&#39;, age: 18, _id: 59fd23fd2ae663070b66a4f7 } ],</span>
  <span class="token comment">// insertedCount: 1,</span>
  <span class="token comment">// insertedIds: [ 59fd23fd2ae663070b66a4f7 ] }</span>

  <span class="token comment">//[注意] 取值之后,一定要记得关闭数据库</span>
  db<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>​</p><ol start="2"><li><p>插入多条数据</p><ul><li><p>使用方法 : (client 是形参 不固定)</p><p><strong>client.db(&#39;数据库名称&#39;). collection(集合名称) .insertMany ( [ { 数据 1 } , { 数据 2 }] , callback(err,result) )</strong></p></li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//2. 插入多条数据</span>
<span class="token comment">// [注意] 插入数据是异步的</span>
<span class="token comment">// 所以要有个回调函数</span>
client
  <span class="token punctuation">.</span><span class="token function">db</span><span class="token punctuation">(</span><span class="token string">&#39;数据库名称&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">collection</span><span class="token punctuation">(</span>集合名称<span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">insertMany</span><span class="token punctuation">(</span>
    <span class="token punctuation">[</span>
      <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;虎哥&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">80</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;达达&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">18</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;香香&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">19</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> doc</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> err<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>doc<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">// { result: { ok: 1, n: 3 },</span>
      <span class="token comment">// ops:</span>
      <span class="token comment">//  [ { name: &#39;虎哥&#39;, age: 80, _id: 59fd24e2b28af807465884cc },</span>
      <span class="token comment">//    { name: &#39;达达&#39;, age: 18, _id: 59fd24e2b28af807465884cd },</span>
      <span class="token comment">//    { name: &#39;香香&#39;, age: 19, _id: 59fd24e2b28af807465884ce } ],</span>
      <span class="token comment">// insertedCount: 3,</span>
      <span class="token comment">// insertedIds:</span>
      <span class="token comment">//  [ 59fd24e2b28af807465884cc,</span>
      <span class="token comment">//    59fd24e2b28af807465884cd,</span>
      <span class="token comment">//    59fd24e2b28af807465884ce ] }</span>
      <span class="token comment">//[注意] 取值之后,一定要记得关闭数据库</span>
      client<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>​</p></li><li><p>查询全部数据</p><ul><li>使用方法 :</li></ul><p>//多个数据满足条件</p><p><strong>client.db(&#39;数据库名称&#39;). collection(集合名称).find ( { 条件 } ) . toArray ( callback(err,docs) )</strong> : 条件可有可无</p><ul><li>打印的 doc: 是一个<strong>数组</strong>, (查询首页列表适合用)</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//5. 全部获取数据</span>
  db<span class="token punctuation">.</span><span class="token function">collection</span><span class="token punctuation">(</span><span class="token string">&#39;heros&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toArray</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span>doc</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">throw</span> err
    <span class="token punctuation">}</span>

    <span class="token comment">// [查询多条的区别]</span>
    <span class="token comment">// 1. client.db(&#39;数据库名称&#39;). collection(集合名称).find().toArray(callback)</span>
    <span class="token comment">// 2. doc 是一个数据集合</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>doc<span class="token punctuation">)</span>

    client<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>​</p></li><li><p>查询单条数据</p><ul><li>使用方法 : <strong>client.db(&#39;数据库名称&#39;). collection(集合名称).findOne( {条件} , callback(err,doc) )</strong></li><li>doc 打印的是一个 <strong>对象</strong> : (查询某个详情页适合用)</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//5.查询单条数据</span>
client
  <span class="token punctuation">.</span><span class="token function">db</span><span class="token punctuation">(</span><span class="token string">&#39;数据库名称&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">collection</span><span class="token punctuation">(</span>集合名称<span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">findOne</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">16</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> doc</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">throw</span> err<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>doc<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 打印的是一个对象</span>
    <span class="token comment">//{ _id: 59fd259fc83c80e709dff4dc, name: &#39;老宫&#39;, age: 16 }</span>

    <span class="token comment">// 异步里关闭数据库</span>
    db<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>​</p></li><li><p>更新数据</p><ul><li><p>使用方法: <strong>client.db(&#39;数据库名称&#39;). collection(集合名称).updateOne ( {条件} , { $set: {更新字段 }} , callback )</strong></p></li><li><p>更新多条: <strong>updateMany</strong></p></li><li><p>如果只跟新一条是用$ set, 如果工作中的编辑页面是要获取所有的信息都要更新一遍的</p><p>所以,直接写对象即可,不用$ set 了</p></li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//5. 更新数据</span>
<span class="token comment">// client.db(&#39;数据库名称&#39;). collection(集合名称).update(参数1,参数2,回调)</span>

client
  <span class="token punctuation">.</span><span class="token function">db</span><span class="token punctuation">(</span><span class="token string">&#39;数据库名称&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">collection</span><span class="token punctuation">(</span><span class="token string">&#39;heros&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">updateOne</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">16</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">$set</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;丹丹&#39;</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> doc</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">throw</span> err<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>doc<span class="token punctuation">)</span><span class="token punctuation">;</span>

    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;ok&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    client<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>​</p></li><li><p>删除数据</p><ul><li>删除单条:</li></ul><p><strong>client.db(&#39;数据库名称&#39;). collection(&#39;heros&#39;).deleteOne ( {条件} , callback )</strong></p><ul><li>删除多条: <strong>deleteMany ( {条件} , callback )</strong></li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//6.删除</span>
<span class="token comment">//删除多条 client.db(&#39;数据库名称&#39;). collection(&#39;heros&#39;).deleteMany()</span>
client
  <span class="token punctuation">.</span><span class="token function">db</span><span class="token punctuation">(</span><span class="token string">&#39;数据库名称&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">collection</span><span class="token punctuation">(</span><span class="token string">&#39;heros&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">deleteOne</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">16</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> doc</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">throw</span> err<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;删除成功&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//6. 关闭数据库</span>
    client<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h3 id="十一、权限管理" tabindex="-1"><a class="header-anchor" href="#十一、权限管理" aria-hidden="true">#</a> 十一、权限管理</h3><ol><li>创建用户</li></ol><ul><li>语法格式：</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>db<span class="token punctuation">.</span><span class="token function">createUser</span><span class="token punctuation">(</span>
<span class="token punctuation">{</span> <span class="token literal-property property">user</span><span class="token operator">:</span> <span class="token string">&quot;&lt;name&gt;&quot;</span><span class="token punctuation">,</span>
<span class="token literal-property property">pwd</span><span class="token operator">:</span> <span class="token string">&quot;&lt;cleartext password&gt;&quot;</span><span class="token punctuation">,</span>
<span class="token literal-property property">customData</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token operator">&lt;</span>any information<span class="token operator">&gt;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token literal-property property">roles</span><span class="token operator">:</span> <span class="token punctuation">[</span>
<span class="token punctuation">{</span> <span class="token literal-property property">role</span><span class="token operator">:</span> <span class="token string">&quot;&lt;role&gt;&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">db</span><span class="token operator">:</span> <span class="token string">&quot;&lt;database&gt;&quot;</span> <span class="token punctuation">}</span> <span class="token operator">|</span> <span class="token string">&quot;&lt;role&gt;&quot;</span><span class="token punctuation">,</span>
<span class="token operator">...</span>

<span class="token punctuation">]</span><span class="token punctuation">}</span>
<span class="token punctuation">)</span>
<span class="token comment">//实例</span>

<span class="token operator">&gt;</span> use admin
<span class="token operator">&gt;</span> db<span class="token punctuation">.</span><span class="token function">createUser</span><span class="token punctuation">(</span>
<span class="token operator">&gt;</span> <span class="token punctuation">{</span><span class="token literal-property property">user</span><span class="token operator">:</span><span class="token string">&#39;useradmin&#39;</span><span class="token punctuation">,</span>
<span class="token operator">&gt;</span> pwd<span class="token operator">:</span><span class="token string">&#39;123456&#39;</span><span class="token punctuation">,</span>
<span class="token operator">&gt;</span> customData<span class="token operator">:</span><span class="token punctuation">{</span><span class="token string-property property">&quot;desc&quot;</span><span class="token operator">:</span><span class="token string">&quot;This user is for administrators&quot;</span><span class="token punctuation">}</span>，
<span class="token operator">&gt;</span> roles<span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token literal-property property">role</span><span class="token operator">:</span><span class="token string">&#39;userAdminAnyDatabase&#39;</span><span class="token punctuation">,</span><span class="token literal-property property">db</span><span class="token operator">:</span><span class="token string">&#39;admin&#39;</span><span class="token punctuation">}</span><span class="token punctuation">]</span>
<span class="token operator">&gt;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>user：用户名</li><li>pwd：密码</li><li>customData: 用于描述账户信息</li><li>roles：指定用户的角色，可以用一个空数组给新用户设定空角色；在 roles 字段,可以指定内置角色和用户定义的角色。</li></ul><p>role 里的角色可以选</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>
Built-In Roles（内置角色）：

1.  数据库用户角色：read、readWrite;
2.  数据库管理角色：dbAdmin、dbOwner、userAdmin；
3.  集群管理角色：clusterAdmin、clusterManager、clusterMonitor、hostManager；
4.  备份恢复角色：backup、restore；
5.  所有数据库角色：readAnyDatabase、readWriteAnyDatabase、userAdminAnyDatabase、dbAdminAnyDatabase
6.  超级用户角色：root
    // 这里还有几个角色间接或直接提供了系统超级用户的访问（dbOwner 、userAdmin、userAdminAnyDatabase）
7.  内部角色：\\_\\_system

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>具体角色:</p><ul><li>Read：允许用户读取指定数据库</li><li>readWrite：允许用户读写指定数据库</li><li>backup,retore:在进行备份、恢复时可以单独指定的角色，在 db.createUser()方法中 roles 里面的 db 必须写成是 admin 库，要不然会 报错</li><li>dbAdmin：允许用户在指定数据库中执行管理函数，如索引创建、删除，查看统计或访问 system.profile</li><li>userAdmin：允许用户向 system.users 集合写入，可以找指定数据库里创建、删除和管理用户</li><li>clusterAdmin：只在 admin 数据库中可用，赋予用户所有分片和复制集相关函数的管理权限。</li><li>readAnyDatabase：只在 admin 数据库中可用，赋予用户所有数据库的读权限</li><li>readWriteAnyDatabase：只在 admin 数据库中可用，赋予用户所有数据库的读写权限</li><li>userAdminAnyDatabase：只在 admin 数据库中可用，赋予用户所有数据库的 userAdmin 权限，</li><li>dbAdminAnyDatabase：只在 admin 数据库中可用，赋予用户所有数据库的 dbAdmin 权限。</li><li>root：只在 admin 数据库中可用。超级账号，超级权限</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,73);function x(_,j){const a=o("ExternalLinkIcon");return l(),i("div",null,[r,n("ul",null,[u,n("li",null,[s("演示下载哪一个:"),n("a",d,[s("下载官网"),e(a)])])]),k,n("ol",null,[n("li",null,[n("h5",m,[v,s(" 安装: "),n("a",b,[s("home brew"),e(a)])]),g]),h]),f,n("blockquote",null,[n("p",null,[n("a",y,[s("win-mongodb 使用"),e(a)])]),n("p",null,[n("a",w,[s("mac-mongodb 使用"),e(a)])])]),q])}const B=p(c,[["render",x],["__file","MongoDB.html.vue"]]);export{B as default};
