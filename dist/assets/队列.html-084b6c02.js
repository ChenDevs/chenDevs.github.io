const e=JSON.parse(`{"key":"v-5ba50a24","path":"/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/%E5%89%8D%E7%AB%AF%E8%BF%9B%E9%98%B6/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%AE%97%E6%B3%95/%E9%98%9F%E5%88%97.html","title":"队列","lang":"zh-CN","frontmatter":{"title":"队列","tag":"队列","category":"数据结构与算法","description":"简介 一个先进先出的数据结构 JavaScript 中没有队列，但可以用 Array 实现队列的所有功能。 const queue = [] queue.push(1) queue.push(2) const item1 = queue.shift() const item2 = queue.shift()","head":[["meta",{"property":"og:url","content":"http://magicbegin.gitee.io/vuepress-blog/vuepress-blog/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/%E5%89%8D%E7%AB%AF%E8%BF%9B%E9%98%B6/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%AE%97%E6%B3%95/%E9%98%9F%E5%88%97.html"}],["meta",{"property":"og:site_name","content":"Mr Chen's Blog"}],["meta",{"property":"og:title","content":"队列"}],["meta",{"property":"og:description","content":"简介 一个先进先出的数据结构 JavaScript 中没有队列，但可以用 Array 实现队列的所有功能。 const queue = [] queue.push(1) queue.push(2) const item1 = queue.shift() const item2 = queue.shift()"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-10-27T11:35:00.000Z"}],["meta",{"property":"article:author","content":"Mr Chen"}],["meta",{"property":"article:tag","content":"队列"}],["meta",{"property":"article:modified_time","content":"2023-10-27T11:35:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"队列\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-10-27T11:35:00.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr Chen\\",\\"url\\":\\"https://gitee.com/magicBegin/vuepress-blog\\",\\"email\\":\\"599422271@qq.com\\"}]}"]]},"headers":[{"level":2,"title":"简介","slug":"简介","link":"#简介","children":[]},{"level":2,"title":"应用场景","slug":"应用场景","link":"#应用场景","children":[{"level":3,"title":"最近的请求次数","slug":"最近的请求次数","link":"#最近的请求次数","children":[]},{"level":3,"title":"前端与队列：js 异步中的任务队列","slug":"前端与队列-js-异步中的任务队列","link":"#前端与队列-js-异步中的任务队列","children":[]}]}],"git":{"createdTime":1698406500000,"updatedTime":1698406500000,"contributors":[{"name":"chenzhen","email":"599422271@qq.com","commits":1}]},"readingTime":{"minutes":1.43,"words":429},"filePathRelative":"前端开发/前端进阶/数据结构算法/队列.md","localizedDate":"2023年10月27日","excerpt":"<h2> 简介</h2>\\n<ul>\\n<li>\\n<p>一个<strong>先进先出</strong>的数据结构</p>\\n</li>\\n<li>\\n<p>JavaScript 中<strong>没有</strong>队列，但可以用 Array 实现队列的所有功能。</p>\\n</li>\\n</ul>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token keyword\\">const</span> queue <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span>\\nqueue<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">push</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">)</span>\\nqueue<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">push</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">2</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token keyword\\">const</span> item1 <span class=\\"token operator\\">=</span> queue<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">shift</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token keyword\\">const</span> item2 <span class=\\"token operator\\">=</span> queue<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">shift</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{e as data};
