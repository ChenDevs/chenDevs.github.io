const e=JSON.parse(`{"key":"v-835caad4","path":"/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%9F%B3/JS%E5%9F%BA%E7%A1%80/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F.html","title":"正则表达式","lang":"zh-CN","frontmatter":{"title":"正则表达式","tag":"正则表达式","category":["前端基石","JS基础"],"description":"// TODO 重新学习 正则表达式(regular expression)描述了字符串的“构成模式”，经常被用于检查字符串是否符合预定的格式要求 正则表达式“按位”描述规则，是指它是一位一位的描述字符串的构成形式 正则表达式可以调用 test()方法，检查某字符串是否符合正则表达式规定的规则 正则表达式的创建 使用/内容/的语法形式，可以快速创建正则表达式 也可以使用 new RegExp('内容')的形式，创建正则表达式(这种写法有坑！) 警告 如果使用 new RegExp() 写法，反斜杠需要多写一个，比如/^\\\\d$/和 new RegExp（'^\\\\\\\\d$'）是相同的意思 使用 typeof 运算符检查正则表达式的类型，结果是 object","head":[["meta",{"property":"og:url","content":"http://magicbegin.gitee.io/vuepress-blog/vuepress-blog/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%9F%B3/JS%E5%9F%BA%E7%A1%80/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F.html"}],["meta",{"property":"og:site_name","content":"Mr Chen's Blog"}],["meta",{"property":"og:title","content":"正则表达式"}],["meta",{"property":"og:description","content":"// TODO 重新学习 正则表达式(regular expression)描述了字符串的“构成模式”，经常被用于检查字符串是否符合预定的格式要求 正则表达式“按位”描述规则，是指它是一位一位的描述字符串的构成形式 正则表达式可以调用 test()方法，检查某字符串是否符合正则表达式规定的规则 正则表达式的创建 使用/内容/的语法形式，可以快速创建正则表达式 也可以使用 new RegExp('内容')的形式，创建正则表达式(这种写法有坑！) 警告 如果使用 new RegExp() 写法，反斜杠需要多写一个，比如/^\\\\d$/和 new RegExp（'^\\\\\\\\d$'）是相同的意思 使用 typeof 运算符检查正则表达式的类型，结果是 object"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-10-27T11:35:00.000Z"}],["meta",{"property":"article:author","content":"Mr Chen"}],["meta",{"property":"article:tag","content":"正则表达式"}],["meta",{"property":"article:modified_time","content":"2023-10-27T11:35:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"正则表达式\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-10-27T11:35:00.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr Chen\\",\\"url\\":\\"https://gitee.com/magicBegin/vuepress-blog\\",\\"email\\":\\"599422271@qq.com\\"}]}"]]},"headers":[{"level":2,"title":"正则表达式的创建","slug":"正则表达式的创建","link":"#正则表达式的创建","children":[]},{"level":2,"title":"元字符","slug":"元字符","link":"#元字符","children":[]},{"level":2,"title":"方括号表示法","slug":"方括号表示法","link":"#方括号表示法","children":[]},{"level":2,"title":"量词","slug":"量词","link":"#量词","children":[]},{"level":2,"title":"修饰符","slug":"修饰符","link":"#修饰符","children":[]},{"level":2,"title":"正则表达式的相关方法","slug":"正则表达式的相关方法","link":"#正则表达式的相关方法","children":[]},{"level":2,"title":"字符串的相关方法","slug":"字符串的相关方法","link":"#字符串的相关方法","children":[]},{"level":2,"title":"正则的应用","slug":"正则的应用","link":"#正则的应用","children":[]},{"level":2,"title":"一些用过的正则","slug":"一些用过的正则","link":"#一些用过的正则","children":[{"level":3,"title":"2022 手机号校验正则","slug":"_2022-手机号校验正则","link":"#_2022-手机号校验正则","children":[]}]}],"git":{"createdTime":1698406500000,"updatedTime":1698406500000,"contributors":[{"name":"chenzhen","email":"599422271@qq.com","commits":1}]},"readingTime":{"minutes":6.78,"words":2034},"filePathRelative":"前端开发/前端基石/JS基础/正则表达式.md","localizedDate":"2023年10月27日","excerpt":"<p>// TODO 重新学习</p>\\n<p>正则表达式(regular expression)描述了字符串的“构成模式”，经常被用于检查字符串是否符合预定的格式要求</p>\\n<p>正则表达式“按位”描述规则，是指<strong>它是一位一位的描述字符串的构成形式</strong></p>\\n<p>正则表达式可以调用 test()方法，检查某字符串是否符合正则表达式规定的规则</p>\\n<h2> 正则表达式的创建</h2>\\n<ul>\\n<li>使用<code>/内容/</code>的语法形式，可以快速创建正则表达式</li>\\n<li>也可以使用 new RegExp('内容')的形式，创建正则表达式(这种写法有坑！)<div class=\\"hint-container danger\\">\\n<p class=\\"hint-container-title\\">警告</p>\\n<p>如果使用 new RegExp() 写法，反斜杠需要多写一个，比如<code>/^\\\\d$/</code>和 <code>new RegExp（'^\\\\\\\\d$'）</code>是相同的意思</p>\\n</div>\\n</li>\\n<li>使用 typeof 运算符检查正则表达式的类型，结果是 object</li>\\n</ul>","autoDesc":true}`);export{e as data};
