const e=JSON.parse(`{"key":"v-03a50e3c","path":"/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/%E5%89%8D%E7%AB%AF%E5%B7%A5%E7%A8%8B%E5%8C%96/Webpack_babel.html","title":"Webpack+babel","lang":"zh-CN","frontmatter":{"title":"Webpack+babel","tag":"前端工程化","date":"2018-08-08T00:00:00.000Z","category":"前端开发","description":"Webpack 前端模块系统的演进 webpack 解决了现存模块打包器的两个痛点： 1 Code Spliting - 代码分离 2 静态资源的模块化处理方案 在 webpack 看来：所有的静态资源都是模块 webpack 模块能够识别以下等形式的模块之间的依赖： JS 的模块化规范： ES2015 import export CommonJS require() module.exports AMD define 和 require 非 JS 等静态资源： css/sass/less 文件中的 @import 图片连接，比如：样式 url(...) 或 HTML img 字体 等","head":[["meta",{"property":"og:url","content":"http://magicbegin.gitee.io/vuepress-blog/vuepress-blog/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/%E5%89%8D%E7%AB%AF%E5%B7%A5%E7%A8%8B%E5%8C%96/Webpack_babel.html"}],["meta",{"property":"og:site_name","content":"Mr Chen's Blog"}],["meta",{"property":"og:title","content":"Webpack+babel"}],["meta",{"property":"og:description","content":"Webpack 前端模块系统的演进 webpack 解决了现存模块打包器的两个痛点： 1 Code Spliting - 代码分离 2 静态资源的模块化处理方案 在 webpack 看来：所有的静态资源都是模块 webpack 模块能够识别以下等形式的模块之间的依赖： JS 的模块化规范： ES2015 import export CommonJS require() module.exports AMD define 和 require 非 JS 等静态资源： css/sass/less 文件中的 @import 图片连接，比如：样式 url(...) 或 HTML img 字体 等"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-10-27T11:35:00.000Z"}],["meta",{"property":"article:author","content":"Mr Chen"}],["meta",{"property":"article:tag","content":"前端工程化"}],["meta",{"property":"article:published_time","content":"2018-08-08T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-10-27T11:35:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Webpack+babel\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2018-08-08T00:00:00.000Z\\",\\"dateModified\\":\\"2023-10-27T11:35:00.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr Chen\\",\\"url\\":\\"https://gitee.com/magicBegin/vuepress-blog\\",\\"email\\":\\"599422271@qq.com\\"}]}"]]},"headers":[],"git":{"createdTime":1698406500000,"updatedTime":1698406500000,"contributors":[{"name":"chenzhen","email":"599422271@qq.com","commits":1}]},"readingTime":{"minutes":9.05,"words":2715},"filePathRelative":"前端开发/前端工程化/Webpack+babel.md","localizedDate":"2018年8月8日","excerpt":"<h4> Webpack</h4>\\n<h5> <a href=\\"http://zhaoda.net/webpack-handbook/module-system.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">前端模块系统的演进</a></h5>\\n<h5> webpack 解决了现存模块打包器的两个痛点：</h5>\\n<ul>\\n<li>1 Code Spliting - 代码分离</li>\\n<li>2 静态资源的模块化处理方案</li>\\n<li>在 webpack 看来：所有的静态资源都是模块</li>\\n<li>webpack 模块能够识别以下等形式的模块之间的依赖：</li>\\n<li>JS 的模块化规范：\\n<ul>\\n<li>ES2015 import export</li>\\n<li>CommonJS require() module.exports</li>\\n<li>AMD define 和 require</li>\\n</ul>\\n</li>\\n<li>非 JS 等静态资源：\\n<ul>\\n<li>css/sass/less 文件中的 @import</li>\\n<li>图片连接，比如：样式 url(...) 或 HTML img</li>\\n<li>字体 等</li>\\n</ul>\\n</li>\\n</ul>","autoDesc":true}`);export{e as data};
