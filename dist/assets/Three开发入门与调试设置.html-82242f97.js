const n=JSON.parse(`{"key":"v-a038728c","path":"/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/%E5%89%8D%E7%AB%AF%E5%9B%BE%E5%BD%A2/Three.js/Three%E5%BC%80%E5%8F%91%E5%85%A5%E9%97%A8%E4%B8%8E%E8%B0%83%E8%AF%95%E8%AE%BE%E7%BD%AE.html","title":"Three开发入门与调试设置","lang":"zh-CN","frontmatter":{"title":"Three开发入门与调试设置","category":"前端开发 - 前端图形 - Three.js","order":2,"description":"创建第一个场景 一个场景能被渲染出来需要：场景、相机和渲染器 import * as THREE from 'three' // 创建场景 const scene = new THREE.Scene() // 创建相机 const camera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 0.1, 1000 ) // 设置相机位置 camera.position.set(0, 0, 10) // 将相机添加到场景中 scene.add(camera) // 创建几何体 const cubeGeometry = new THREE.BoxGeometry(1, 1, 1) // 设置物体材质 const cubeMaterial = new THREE.MeshBasicMaterial({ color: 0xffff00 }) // 根据几何体和材质创建物体 const cube = new THREE.Mesh(cubeGeometry, cubeMaterial) // 将几何体添加到场景中 scene.add(cube) // 初始化渲染器 const renderer = new THREE.WebGLRenderer() // 设置渲染的尺寸大小 renderer.setSize(window.innerWidth, window.innerHeight) // 将webgl渲染的canvas内容添加到body document.body.appendChild(renderer.domElement) // 使用渲染器，通过相机将场景渲染进来 renderer.render(scene, camera)","head":[["meta",{"property":"og:url","content":"http://magicbegin.gitee.io/vuepress-blog/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/%E5%89%8D%E7%AB%AF%E5%9B%BE%E5%BD%A2/Three.js/Three%E5%BC%80%E5%8F%91%E5%85%A5%E9%97%A8%E4%B8%8E%E8%B0%83%E8%AF%95%E8%AE%BE%E7%BD%AE.html"}],["meta",{"property":"og:site_name","content":"Mr Chen's Blog"}],["meta",{"property":"og:title","content":"Three开发入门与调试设置"}],["meta",{"property":"og:description","content":"创建第一个场景 一个场景能被渲染出来需要：场景、相机和渲染器 import * as THREE from 'three' // 创建场景 const scene = new THREE.Scene() // 创建相机 const camera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 0.1, 1000 ) // 设置相机位置 camera.position.set(0, 0, 10) // 将相机添加到场景中 scene.add(camera) // 创建几何体 const cubeGeometry = new THREE.BoxGeometry(1, 1, 1) // 设置物体材质 const cubeMaterial = new THREE.MeshBasicMaterial({ color: 0xffff00 }) // 根据几何体和材质创建物体 const cube = new THREE.Mesh(cubeGeometry, cubeMaterial) // 将几何体添加到场景中 scene.add(cube) // 初始化渲染器 const renderer = new THREE.WebGLRenderer() // 设置渲染的尺寸大小 renderer.setSize(window.innerWidth, window.innerHeight) // 将webgl渲染的canvas内容添加到body document.body.appendChild(renderer.domElement) // 使用渲染器，通过相机将场景渲染进来 renderer.render(scene, camera)"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-10-27T11:35:00.000Z"}],["meta",{"property":"article:author","content":"Mr Chen"}],["meta",{"property":"article:modified_time","content":"2023-10-27T11:35:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Three开发入门与调试设置\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-10-27T11:35:00.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr Chen\\",\\"url\\":\\"https://gitee.com/magicBegin/vuepress-blog\\",\\"email\\":\\"599422271@qq.com\\"}]}"]]},"headers":[{"level":2,"title":"创建第一个场景","slug":"创建第一个场景","link":"#创建第一个场景","children":[]},{"level":2,"title":"透视相机（PerspectiveCamera）示意图","slug":"透视相机-perspectivecamera-示意图","link":"#透视相机-perspectivecamera-示意图","children":[]},{"level":2,"title":"轨道控制器查看物体","slug":"轨道控制器查看物体","link":"#轨道控制器查看物体","children":[]},{"level":2,"title":"关于坐标系","slug":"关于坐标系","link":"#关于坐标系","children":[]},{"level":2,"title":"requestAnimationFrame","slug":"requestanimationframe","link":"#requestanimationframe","children":[]},{"level":2,"title":"添加坐标轴辅助器","slug":"添加坐标轴辅助器","link":"#添加坐标轴辅助器","children":[]},{"level":2,"title":"设置物体移动","slug":"设置物体移动","link":"#设置物体移动","children":[]},{"level":2,"title":"物体的缩放与旋转","slug":"物体的缩放与旋转","link":"#物体的缩放与旋转","children":[]},{"level":2,"title":"GSAP 动画库","slug":"gsap-动画库","link":"#gsap-动画库","children":[{"level":3,"title":"gsap.to()","slug":"gsap-to","link":"#gsap-to","children":[]}]},{"level":2,"title":"根据尺寸变化实现自适应画面","slug":"根据尺寸变化实现自适应画面","link":"#根据尺寸变化实现自适应画面","children":[]},{"level":2,"title":"设置控制器的阻尼","slug":"设置控制器的阻尼","link":"#设置控制器的阻尼","children":[]},{"level":2,"title":"调用 js 接口控制画布全屏和退出全屏","slug":"调用-js-接口控制画布全屏和退出全屏","link":"#调用-js-接口控制画布全屏和退出全屏","children":[]},{"level":2,"title":"应用图形用户界面更改变量","slug":"应用图形用户界面更改变量","link":"#应用图形用户界面更改变量","children":[{"level":3,"title":"常见用法","slug":"常见用法","link":"#常见用法","children":[]}]}],"git":{"createdTime":1698406500000,"updatedTime":1698406500000,"contributors":[{"name":"chenzhen","email":"599422271@qq.com","commits":1}]},"readingTime":{"minutes":5.58,"words":1674},"filePathRelative":"前端开发/前端图形/Three.js/Three开发入门与调试设置.md","localizedDate":"2023年10月27日","excerpt":"<h2> 创建第一个场景</h2>\\n<p>一个场景能被渲染出来需要：场景、相机和渲染器</p>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token keyword\\">import</span> <span class=\\"token operator\\">*</span> <span class=\\"token keyword\\">as</span> <span class=\\"token constant\\">THREE</span> <span class=\\"token keyword\\">from</span> <span class=\\"token string\\">'three'</span>\\n<span class=\\"token comment\\">// 创建场景</span>\\n<span class=\\"token keyword\\">const</span> scene <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">THREE<span class=\\"token punctuation\\">.</span>Scene</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n\\n<span class=\\"token comment\\">// 创建相机</span>\\n<span class=\\"token keyword\\">const</span> camera <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">THREE<span class=\\"token punctuation\\">.</span>PerspectiveCamera</span><span class=\\"token punctuation\\">(</span>\\n  <span class=\\"token number\\">75</span><span class=\\"token punctuation\\">,</span>\\n  window<span class=\\"token punctuation\\">.</span>innerWidth <span class=\\"token operator\\">/</span> window<span class=\\"token punctuation\\">.</span>innerHeight<span class=\\"token punctuation\\">,</span>\\n  <span class=\\"token number\\">0.1</span><span class=\\"token punctuation\\">,</span>\\n  <span class=\\"token number\\">1000</span>\\n<span class=\\"token punctuation\\">)</span>\\n\\n<span class=\\"token comment\\">// 设置相机位置</span>\\ncamera<span class=\\"token punctuation\\">.</span>position<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">set</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">10</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token comment\\">// 将相机添加到场景中</span>\\nscene<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">add</span><span class=\\"token punctuation\\">(</span>camera<span class=\\"token punctuation\\">)</span>\\n\\n<span class=\\"token comment\\">// 创建几何体</span>\\n<span class=\\"token keyword\\">const</span> cubeGeometry <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">THREE<span class=\\"token punctuation\\">.</span>BoxGeometry</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token comment\\">// 设置物体材质</span>\\n<span class=\\"token keyword\\">const</span> cubeMaterial <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">THREE<span class=\\"token punctuation\\">.</span>MeshBasicMaterial</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">{</span> <span class=\\"token literal-property property\\">color</span><span class=\\"token operator\\">:</span> <span class=\\"token number\\">0xffff00</span> <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token comment\\">// 根据几何体和材质创建物体</span>\\n<span class=\\"token keyword\\">const</span> cube <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">THREE<span class=\\"token punctuation\\">.</span>Mesh</span><span class=\\"token punctuation\\">(</span>cubeGeometry<span class=\\"token punctuation\\">,</span> cubeMaterial<span class=\\"token punctuation\\">)</span>\\n<span class=\\"token comment\\">// 将几何体添加到场景中</span>\\nscene<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">add</span><span class=\\"token punctuation\\">(</span>cube<span class=\\"token punctuation\\">)</span>\\n\\n<span class=\\"token comment\\">// 初始化渲染器</span>\\n<span class=\\"token keyword\\">const</span> renderer <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">THREE<span class=\\"token punctuation\\">.</span>WebGLRenderer</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token comment\\">// 设置渲染的尺寸大小</span>\\nrenderer<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">setSize</span><span class=\\"token punctuation\\">(</span>window<span class=\\"token punctuation\\">.</span>innerWidth<span class=\\"token punctuation\\">,</span> window<span class=\\"token punctuation\\">.</span>innerHeight<span class=\\"token punctuation\\">)</span>\\n\\n<span class=\\"token comment\\">// 将webgl渲染的canvas内容添加到body</span>\\ndocument<span class=\\"token punctuation\\">.</span>body<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">appendChild</span><span class=\\"token punctuation\\">(</span>renderer<span class=\\"token punctuation\\">.</span>domElement<span class=\\"token punctuation\\">)</span>\\n\\n<span class=\\"token comment\\">// 使用渲染器，通过相机将场景渲染进来</span>\\nrenderer<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">render</span><span class=\\"token punctuation\\">(</span>scene<span class=\\"token punctuation\\">,</span> camera<span class=\\"token punctuation\\">)</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{n as data};
