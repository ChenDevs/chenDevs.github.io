const n=JSON.parse(`{"key":"v-adf81840","path":"/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/%E5%89%8D%E7%AB%AF%E8%BF%9B%E9%98%B6/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%AE%97%E6%B3%95/%E9%9B%86%E5%90%88.html","title":"集合","lang":"zh-CN","frontmatter":{"title":"集合","tag":"集合","category":"数据结构与算法","description":"简介 一种无序且唯一的数据结构 ES6中有集合，名为Set 集合的常用操作：去重、判断某元素是否在集合中、求交集 // 去重 const arr = [1, 1, 1] const arr1 = [...new Set(arr)] console.log(arr1) // [1] // 判断某元素是否在集合中 const set = new Set([1, 2]) const has = set.has(1) console.log(has) // true // 求交集 const set2 = new Set([3, 4, 1]) const set3 = new Set([...set].filter((item) =&gt; set2.has(item))) console.log(set3) // Set { 1 }","head":[["meta",{"property":"og:url","content":"http://magicbegin.gitee.io/vuepress-blog/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/%E5%89%8D%E7%AB%AF%E8%BF%9B%E9%98%B6/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%AE%97%E6%B3%95/%E9%9B%86%E5%90%88.html"}],["meta",{"property":"og:site_name","content":"Mr Chen's Blog"}],["meta",{"property":"og:title","content":"集合"}],["meta",{"property":"og:description","content":"简介 一种无序且唯一的数据结构 ES6中有集合，名为Set 集合的常用操作：去重、判断某元素是否在集合中、求交集 // 去重 const arr = [1, 1, 1] const arr1 = [...new Set(arr)] console.log(arr1) // [1] // 判断某元素是否在集合中 const set = new Set([1, 2]) const has = set.has(1) console.log(has) // true // 求交集 const set2 = new Set([3, 4, 1]) const set3 = new Set([...set].filter((item) =&gt; set2.has(item))) console.log(set3) // Set { 1 }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-10-27T11:35:00.000Z"}],["meta",{"property":"article:author","content":"Mr Chen"}],["meta",{"property":"article:tag","content":"集合"}],["meta",{"property":"article:modified_time","content":"2023-10-27T11:35:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"集合\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-10-27T11:35:00.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr Chen\\",\\"url\\":\\"https://gitee.com/magicBegin/vuepress-blog\\",\\"email\\":\\"599422271@qq.com\\"}]}"]]},"headers":[{"level":2,"title":"简介","slug":"简介","link":"#简介","children":[]},{"level":2,"title":"LeetCode：349. 两个数组的交集","slug":"leetcode-349-两个数组的交集","link":"#leetcode-349-两个数组的交集","children":[]},{"level":2,"title":"前端与集合：使用 ES6 中 Set","slug":"前端与集合-使用-es6-中-set","link":"#前端与集合-使用-es6-中-set","children":[{"level":3,"title":"Set,Array 互转","slug":"set-array-互转","link":"#set-array-互转","children":[]},{"level":3,"title":"交集/差集","slug":"交集-差集","link":"#交集-差集","children":[]}]}],"git":{"createdTime":1698406500000,"updatedTime":1698406500000,"contributors":[{"name":"chenzhen","email":"599422271@qq.com","commits":1}]},"readingTime":{"minutes":1.34,"words":401},"filePathRelative":"前端开发/前端进阶/数据结构算法/集合.md","localizedDate":"2023年10月27日","excerpt":"<h2> 简介</h2>\\n<p>一种<strong>无序且唯一</strong>的数据结构</p>\\n<p><code>ES6</code>中有集合，名为<code>Set</code></p>\\n<p>集合的常用操作：去重、判断某元素是否在集合中、求交集</p>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token comment\\">// 去重</span>\\n<span class=\\"token keyword\\">const</span> arr <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">[</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">]</span>\\n<span class=\\"token keyword\\">const</span> arr1 <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">[</span><span class=\\"token operator\\">...</span><span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">Set</span><span class=\\"token punctuation\\">(</span>arr<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">]</span>\\nconsole<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span>arr1<span class=\\"token punctuation\\">)</span> <span class=\\"token comment\\">// [1]</span>\\n\\n<span class=\\"token comment\\">// 判断某元素是否在集合中</span>\\n<span class=\\"token keyword\\">const</span> set <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">Set</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">[</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">2</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token keyword\\">const</span> has <span class=\\"token operator\\">=</span> set<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">has</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">)</span>\\nconsole<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span>has<span class=\\"token punctuation\\">)</span> <span class=\\"token comment\\">// true</span>\\n<span class=\\"token comment\\">// 求交集</span>\\n<span class=\\"token keyword\\">const</span> set2 <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">Set</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">[</span><span class=\\"token number\\">3</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">4</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token keyword\\">const</span> set3 <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">Set</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">[</span><span class=\\"token operator\\">...</span>set<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">filter</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">item</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> set2<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">has</span><span class=\\"token punctuation\\">(</span>item<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\nconsole<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span>set3<span class=\\"token punctuation\\">)</span> <span class=\\"token comment\\">// Set { 1 }</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{n as data};
