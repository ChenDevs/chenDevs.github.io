const n=JSON.parse('{"key":"v-77271408","path":"/%E5%BC%80%E5%8F%91%E6%97%A5%E5%BF%97/JS/%E6%95%B0%E7%BB%84%E5%AF%B9%E8%B1%A1%E6%A0%B9%E6%8D%AE%E6%95%B0%E6%8D%AE%E9%A1%B9%E7%8A%B6%E6%80%81%E5%B1%9E%E6%80%A7%E5%A6%82%E4%BD%95%E7%AD%9B%E9%80%89%E6%95%B0%E6%8D%AE.html","title":"数组对象根据数据项状态属性如何筛选数据","lang":"zh-CN","frontmatter":{"title":"数组对象根据数据项状态属性如何筛选数据","category":["开发笔记","JS"],"description":"比如一个小功能:需要计算当前已完成的项的数量？ 这时我们就需要数组中每一项的某个状态属性值去筛选 在 vue 中往往使用计算属性去完成，这里使用数组三种不同的方法完成： // 统计当前已完成的数据项 doneSum() { // ``````reduce````` return this.todos.reduce((acc, cur) =&gt; { return acc + (cur.done ? 1 : 0); }, 0); // ``````filter````` const done = this.todos.filter((todo)=&gt;{ return todo.done==true }) return done.length // ````forEach````` let i =0 this.todos.forEach(element =&gt; { if(element.done==true){ i++ } }) return i },","head":[["meta",{"property":"og:url","content":"http://magicbegin.gitee.io/vuepress-blog/vuepress-blog/%E5%BC%80%E5%8F%91%E6%97%A5%E5%BF%97/JS/%E6%95%B0%E7%BB%84%E5%AF%B9%E8%B1%A1%E6%A0%B9%E6%8D%AE%E6%95%B0%E6%8D%AE%E9%A1%B9%E7%8A%B6%E6%80%81%E5%B1%9E%E6%80%A7%E5%A6%82%E4%BD%95%E7%AD%9B%E9%80%89%E6%95%B0%E6%8D%AE.html"}],["meta",{"property":"og:site_name","content":"Mr Chen\'s Blog"}],["meta",{"property":"og:title","content":"数组对象根据数据项状态属性如何筛选数据"}],["meta",{"property":"og:description","content":"比如一个小功能:需要计算当前已完成的项的数量？ 这时我们就需要数组中每一项的某个状态属性值去筛选 在 vue 中往往使用计算属性去完成，这里使用数组三种不同的方法完成： // 统计当前已完成的数据项 doneSum() { // ``````reduce````` return this.todos.reduce((acc, cur) =&gt; { return acc + (cur.done ? 1 : 0); }, 0); // ``````filter````` const done = this.todos.filter((todo)=&gt;{ return todo.done==true }) return done.length // ````forEach````` let i =0 this.todos.forEach(element =&gt; { if(element.done==true){ i++ } }) return i },"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-10-27T11:35:00.000Z"}],["meta",{"property":"article:author","content":"Mr Chen"}],["meta",{"property":"article:modified_time","content":"2023-10-27T11:35:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"数组对象根据数据项状态属性如何筛选数据\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-10-27T11:35:00.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr Chen\\",\\"url\\":\\"https://gitee.com/magicBegin/vuepress-blog\\",\\"email\\":\\"599422271@qq.com\\"}]}"]]},"headers":[],"git":{"createdTime":1698406500000,"updatedTime":1698406500000,"contributors":[{"name":"chenzhen","email":"599422271@qq.com","commits":1}]},"readingTime":{"minutes":0.5,"words":150},"filePathRelative":"开发日志/JS/数组对象根据数据项状态属性如何筛选数据.md","localizedDate":"2023年10月27日","excerpt":"<p>比如一个<code>小功能</code>:需要计算当前<code>已完成</code>的项的数量？ 这时我们就需要数组中每一项的某个状态属性值去<code>筛选</code></p>\\n<p>在 vue 中往往使用计算属性去完成，这里使用数组三种不同的方法完成：</p>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token comment\\">// 统计当前已完成的数据项</span>\\n    <span class=\\"token function\\">doneSum</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n      <span class=\\"token comment\\">// ``````reduce`````</span>\\n      <span class=\\"token keyword\\">return</span> <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>todos<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">reduce</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">acc<span class=\\"token punctuation\\">,</span> cur</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">return</span> acc <span class=\\"token operator\\">+</span> <span class=\\"token punctuation\\">(</span>cur<span class=\\"token punctuation\\">.</span>done <span class=\\"token operator\\">?</span> <span class=\\"token number\\">1</span> <span class=\\"token operator\\">:</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n      <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n      <span class=\\"token comment\\">// ``````filter`````</span>\\n      <span class=\\"token keyword\\">const</span> done  <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>todos<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">filter</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">todo</span><span class=\\"token punctuation\\">)</span><span class=\\"token operator\\">=&gt;</span><span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">return</span> todo<span class=\\"token punctuation\\">.</span>done<span class=\\"token operator\\">==</span><span class=\\"token boolean\\">true</span>\\n      <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n      <span class=\\"token keyword\\">return</span> done<span class=\\"token punctuation\\">.</span>length\\n      <span class=\\"token comment\\">// ````forEach`````</span>\\n        <span class=\\"token keyword\\">let</span> i <span class=\\"token operator\\">=</span><span class=\\"token number\\">0</span>\\n        <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>todos<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">forEach</span><span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">element</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n            <span class=\\"token keyword\\">if</span><span class=\\"token punctuation\\">(</span>element<span class=\\"token punctuation\\">.</span>done<span class=\\"token operator\\">==</span><span class=\\"token boolean\\">true</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n              i<span class=\\"token operator\\">++</span>\\n            <span class=\\"token punctuation\\">}</span>\\n        <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n        <span class=\\"token keyword\\">return</span> i\\n    <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
