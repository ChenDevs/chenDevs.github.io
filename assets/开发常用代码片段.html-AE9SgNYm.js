const e=JSON.parse(`{"key":"v-92c8dac6","path":"/%E5%BC%80%E5%8F%91%E6%97%A5%E5%BF%97/%E5%BC%80%E5%8F%91%E5%B8%B8%E7%94%A8%E4%BB%A3%E7%A0%81%E7%89%87%E6%AE%B5.html","title":"开发常用代码片段","lang":"zh-CN","frontmatter":{"title":"开发常用代码片段","tag":["项目总结"],"date":"2021-08-29T00:00:00.000Z","category":["开发日志"],"description":"1 防抖 在一定时间间隔内，多次调用一个方法，只会执行一次. 这个方法的实现是从 Lodash 库中 copy 的 使用方式： 如果第三个参数immediate传 true，则会立即执行一次调用，后续的调用不会在执行，可以自己在代码中试一下 2 节流 多次调用方法，按照一定的时间间隔执行 这个方法的实现也是从 Lodash 库中 copy 的 第三个参...","head":[["meta",{"property":"og:url","content":"https://magicbegin.gitee.io/blog/blog/%E5%BC%80%E5%8F%91%E6%97%A5%E5%BF%97/%E5%BC%80%E5%8F%91%E5%B8%B8%E7%94%A8%E4%BB%A3%E7%A0%81%E7%89%87%E6%AE%B5.html"}],["meta",{"property":"og:site_name","content":"Mr Chen's Blog"}],["meta",{"property":"og:title","content":"开发常用代码片段"}],["meta",{"property":"og:description","content":"1 防抖 在一定时间间隔内，多次调用一个方法，只会执行一次. 这个方法的实现是从 Lodash 库中 copy 的 使用方式： 如果第三个参数immediate传 true，则会立即执行一次调用，后续的调用不会在执行，可以自己在代码中试一下 2 节流 多次调用方法，按照一定的时间间隔执行 这个方法的实现也是从 Lodash 库中 copy 的 第三个参..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-02-03T06:58:22.000Z"}],["meta",{"property":"article:author","content":"Mr.Chen"}],["meta",{"property":"article:tag","content":"项目总结"}],["meta",{"property":"article:published_time","content":"2021-08-29T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-02-03T06:58:22.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"开发常用代码片段\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2021-08-29T00:00:00.000Z\\",\\"dateModified\\":\\"2024-02-03T06:58:22.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Chen\\",\\"url\\":\\"/logo.png\\"}]}"]]},"headers":[{"level":2,"title":"1 防抖","slug":"_1-防抖","link":"#_1-防抖","children":[]},{"level":2,"title":"2 节流","slug":"_2-节流","link":"#_2-节流","children":[]},{"level":2,"title":"3. cleanObject","slug":"_3-cleanobject","link":"#_3-cleanobject","children":[]},{"level":2,"title":"4. 获取文件后缀名","slug":"_4-获取文件后缀名","link":"#_4-获取文件后缀名","children":[]},{"level":2,"title":"5. 复制内容到剪贴板","slug":"_5-复制内容到剪贴板","link":"#_5-复制内容到剪贴板","children":[]},{"level":2,"title":"6. 休眠多少毫秒","slug":"_6-休眠多少毫秒","link":"#_6-休眠多少毫秒","children":[]},{"level":2,"title":"7. 生成随机字符串","slug":"_7-生成随机字符串","link":"#_7-生成随机字符串","children":[]},{"level":2,"title":"8. 简单的深拷贝","slug":"_8-简单的深拷贝","link":"#_8-简单的深拷贝","children":[]},{"level":2,"title":"9. 数组去重","slug":"_9-数组去重","link":"#_9-数组去重","children":[]},{"level":2,"title":"10. 对象转化为 FormData 对象","slug":"_10-对象转化为-formdata-对象","link":"#_10-对象转化为-formdata-对象","children":[]},{"level":2,"title":"11.保留到小数点以后 n 位","slug":"_11-保留到小数点以后-n-位","link":"#_11-保留到小数点以后-n-位","children":[]},{"level":2,"title":"12.IntersectionObserver 对象使用实现懒加载","slug":"_12-intersectionobserver-对象使用实现懒加载","link":"#_12-intersectionobserver-对象使用实现懒加载","children":[]},{"level":2,"title":"13.自定义 tree","slug":"_13-自定义-tree","link":"#_13-自定义-tree","children":[]}],"git":{"createdTime":1702103523000,"updatedTime":1706943502000,"contributors":[{"name":"chenzhen","email":"599422271@qq.com","commits":2}]},"readingTime":{"minutes":5.41,"words":1623},"filePathRelative":"开发日志/开发常用代码片段.md","localizedDate":"2021年8月29日","autoDesc":true}`);export{e as data};
