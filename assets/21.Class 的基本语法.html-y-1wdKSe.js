const e=JSON.parse(`{"key":"v-72afc9a7","path":"/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%9F%B3/%E3%80%8AES6%20%E6%95%99%E7%A8%8B%E3%80%8B%E7%AC%94%E8%AE%B0/21.Class%20%E7%9A%84%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95.html","title":"Class 的基本语法","lang":"zh-CN","frontmatter":{"title":"Class 的基本语法","date":"2020-02-09T16:00:29.000Z","author":"阮一峰","category":["《ES6 教程》笔记"],"tag":["ES6"],"description":"简介 类的由来 JavaScript 语言中，生成实例对象的传统方法是通过构造函数。下面是一个例子。 上面这种写法跟传统的面向对象语言（比如 C++ 和 Java）差异很大，很容易让新学习这门语言的程序员感到困惑。 ES6 提供了更接近传统语言的写法，引入了 Class（类）这个概念，作为对象的模板。通过class关键字，可以定义类。 基本上，ES6 ...","head":[["meta",{"property":"og:url","content":"https://chenvibes.github.io/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%9F%B3/%E3%80%8AES6%20%E6%95%99%E7%A8%8B%E3%80%8B%E7%AC%94%E8%AE%B0/21.Class%20%E7%9A%84%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95.html"}],["meta",{"property":"og:site_name","content":"Mr Chen's Blog"}],["meta",{"property":"og:title","content":"Class 的基本语法"}],["meta",{"property":"og:description","content":"简介 类的由来 JavaScript 语言中，生成实例对象的传统方法是通过构造函数。下面是一个例子。 上面这种写法跟传统的面向对象语言（比如 C++ 和 Java）差异很大，很容易让新学习这门语言的程序员感到困惑。 ES6 提供了更接近传统语言的写法，引入了 Class（类）这个概念，作为对象的模板。通过class关键字，可以定义类。 基本上，ES6 ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-09-17T13:26:50.000Z"}],["meta",{"property":"article:author","content":"阮一峰"}],["meta",{"property":"article:tag","content":"ES6"}],["meta",{"property":"article:published_time","content":"2020-02-09T16:00:29.000Z"}],["meta",{"property":"article:modified_time","content":"2024-09-17T13:26:50.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Class 的基本语法\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2020-02-09T16:00:29.000Z\\",\\"dateModified\\":\\"2024-09-17T13:26:50.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"阮一峰\\"}]}"]]},"headers":[{"level":2,"title":"简介","slug":"简介","link":"#简介","children":[{"level":3,"title":"类的由来","slug":"类的由来","link":"#类的由来","children":[]},{"level":3,"title":"constructor 方法","slug":"constructor-方法","link":"#constructor-方法","children":[]},{"level":3,"title":"类的实例","slug":"类的实例","link":"#类的实例","children":[]},{"level":3,"title":"取值函数（getter）和存值函数（setter）","slug":"取值函数-getter-和存值函数-setter","link":"#取值函数-getter-和存值函数-setter","children":[]},{"level":3,"title":"属性表达式","slug":"属性表达式","link":"#属性表达式","children":[]},{"level":3,"title":"Class 表达式","slug":"class-表达式","link":"#class-表达式","children":[]},{"level":3,"title":"注意点","slug":"注意点","link":"#注意点","children":[]}]},{"level":2,"title":"静态方法","slug":"静态方法","link":"#静态方法","children":[]},{"level":2,"title":"实例属性的新写法","slug":"实例属性的新写法","link":"#实例属性的新写法","children":[]},{"level":2,"title":"静态属性","slug":"静态属性","link":"#静态属性","children":[]},{"level":2,"title":"私有方法和私有属性","slug":"私有方法和私有属性","link":"#私有方法和私有属性","children":[{"level":3,"title":"现有的解决方案","slug":"现有的解决方案","link":"#现有的解决方案","children":[]},{"level":3,"title":"私有属性的提案","slug":"私有属性的提案","link":"#私有属性的提案","children":[]}]},{"level":2,"title":"new.target 属性","slug":"new-target-属性","link":"#new-target-属性","children":[]}],"git":{"createdTime":1726576680000,"updatedTime":1726579610000,"contributors":[{"name":"chenzhen","email":"599422271@qq.com","commits":3}]},"readingTime":{"minutes":17.86,"words":5358},"filePathRelative":"前端开发/前端基石/《ES6 教程》笔记/21.Class 的基本语法.md","localizedDate":"2020年2月10日","autoDesc":true}`);export{e as data};
