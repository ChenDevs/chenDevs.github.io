import{_ as p}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as o,o as c,c as l,b as n,d as a,a as t,e}from"./app-XuorXwmJ.js";const i={},u=e(`<h1 id="_02-元素渲染" tabindex="-1"><a class="header-anchor" href="#_02-元素渲染" aria-hidden="true">#</a> 02. 元素渲染</h1><p>元素是构成 React 应用的最小砖块，描述了你在屏幕上想看到的内容。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> element <span class="token operator">=</span> <span class="token operator">&lt;</span>h1<span class="token operator">&gt;</span>Hello<span class="token punctuation">,</span> world<span class="token operator">&lt;</span><span class="token operator">/</span>h1<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>与浏览器的 DOM 元素不同，<strong>React 元素是创建开销极小的普通对象</strong>。React DOM 会负责更新 DOM 来与 React 元素保持一致。</p><h2 id="将一个元素渲染为-dom" tabindex="-1"><a class="header-anchor" href="#将一个元素渲染为-dom" aria-hidden="true">#</a> 将一个元素渲染为 DOM</h2><p>假设你的 HTML 文件某处有一个 <code>&lt;div&gt;</code>：</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>root<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>根节点，React 应用只有单一根 DOM 节点</p><blockquote><p>但一个 html 页面可以有多个 React 应用，每个应用对应一个独立根节点。</p></blockquote><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token keyword">const</span> el <span class="token operator">=</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">Hello</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>
ReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>el<span class="token punctuation">,</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;root&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="更新已渲染的元素" tabindex="-1"><a class="header-anchor" href="#更新已渲染的元素" aria-hidden="true">#</a> 更新已渲染的元素</h2>`,11),r={href:"https://en.wikipedia.org/wiki/Immutable_object",target:"_blank",rel:"noopener noreferrer"},d={href:"https://zh-hans.reactjs.org/docs/react-dom.html#render",target:"_blank",rel:"noopener noreferrer"},k=n("code",null,"ReactDOM.render()",-1),h=e(`<p>考虑一个计时器的例子：</p><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token keyword">function</span> <span class="token function">tick</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// element是一个React元素</span>
  <span class="token keyword">const</span> element <span class="token operator">=</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">Hello, world!</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">It is </span><span class="token punctuation">{</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toLocaleTimeString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token plain-text">.</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token punctuation">)</span>
  ReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>element<span class="token punctuation">,</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;root&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token function">setInterval</span><span class="token punctuation">(</span>tick<span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),g={href:"https://zh-hans.reactjs.org/docs/react-dom.html#render",target:"_blank",rel:"noopener noreferrer"},m=n("code",null,"ReactDOM.render()",-1),v={href:"https://zh-hans.reactjs.org/docs/state-and-lifecycle.html",target:"_blank",rel:"noopener noreferrer"},_=n("h2",{id:"react-只更新它需要更新的部分",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#react-只更新它需要更新的部分","aria-hidden":"true"},"#"),a(" React 只更新它需要更新的部分")],-1),b=n("p",null,[a("上个例子中，尽管每一秒我们都会新建一个描述整个 UI 树的元素，但 React DOM "),n("strong",null,"只会更新实际改变了的内"),a("容。")],-1);function f(x,R){const s=o("ExternalLinkIcon");return c(),l("div",null,[u,n("p",null,[a("React 元素是"),n("a",r,[a("不可变对象"),t(s)]),a("。一旦被创建，你就无法更改它的子元素或者属性。一个元素就像电影的单帧：它代表了某个特定时刻的 UI。")]),n("p",null,[a("根据我们已有的知识，更新 UI 唯一的方式是创建一个全新的元素，并将其传入 "),n("a",d,[k,t(s)]),a("。")]),h,n("p",null,[a("注意：在实践中，"),n("strong",null,[a("大多数 React 应用只会调用一次 "),n("a",g,[m,t(s)])]),a("。在下一个章节，我们将学习如何将这些代码封装到**"),n("a",v,[a("有状态组件"),t(s)]),a("**中。")]),_,b])}const M=p(i,[["render",f],["__file","02.元素渲染.html.vue"]]);export{M as default};
