import{_ as t}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as l,o as s,c,b as e,d as o,a as r,f as _}from"./app-EWfIkEXe.js";const a={},i=e("p",null,":::tip",-1),d={href:"https://cn.vuejs.org/v2/guide/",target:"_blank",rel:"noopener noreferrer"},u=e("p",null,":::",-1),h=e("h1",{id:"mvvm-模式",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#mvvm-模式","aria-hidden":"true"},"#"),o(" MVVM 模式")],-1),V=e("p",null,[o("MVVM 模式，"),e("code",null,"M"),o("即 model，数据模型；"),e("code",null,"V"),o("即 view，视图；"),e("code",null,"VM"),o("即 view-model，视图模型。")],-1),m=e("figure",null,[e("img",{src:"https://jsd.cdn.zzko.cn/gh/xugaoyi/image_store/blog/20200204123438.png",alt:"",tabindex:"0",loading:"lazy"}),e("figcaption")],-1),p=e("p",null,[e("strong",null,"理解")],-1),M=e("p",null,"首先，数据 Model 通过 Data Bindings 把数据绑定在 View 视图上，",-1),g=e("p",null,"当 View 视图有交互（有改变）的时候，Dom listeners 会自动监听，然后更新数据 Model。",-1),f=e("p",null,[e("strong",null,"Q：什么是 MVVM 模式？")],-1),v=e("p",null,"A：MVVM 模式，第一个 M 代表数据模型，V 代表视图，VM 代表视图模型； 它的实际操作原理是：后台数据通过视图模型来渲染视图，就是页面。当用户在页面上进行操作的时候， 视图模型会自动监听到用户的操作，从而改变后台数据。",-1);function x(k,b){const n=l("ExternalLinkIcon");return s(),c("div",null,[i,e("p",null,[o("说明：本章内容是博主的 Vue 学习笔记，以"),e("a",d,[o("官方文档"),r(n)]),o("为准。")]),u,h,V,_(" more "),m,p,M,g,f,v])}const N=t(a,[["render",x],["__file","00.MVVM模式.html.vue"]]);export{N as default};
