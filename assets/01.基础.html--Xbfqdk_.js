const e=JSON.parse(`{"key":"v-9c3be196","path":"/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%9F%B3/%E3%80%8AJavaScript%E6%95%99%E7%A8%8B%E3%80%8B%E7%AC%94%E8%AE%B0/01.%E5%9F%BA%E7%A1%80.html","title":"基础","lang":"zh-CN","frontmatter":{"title":"基础","date":"2020-01-12T11:49:16.000Z","category":["《JavaScript教程》笔记"],"tag":["JavaScript"],"description":"说明：本章内容为博主在原教程基础上添加自己的学习笔记，来源，教程版权归原作者所有。 一、JS 的一些名词概念 什么是作用域？ 变量存在的范围。 可分为全局作用域和函数作用域，ES6 新增块级作用域。 什么是闭包？ 闭包就是能够读取其他函数内部变量的函数。 闭包的形式：函数内部定义函数; 本质上闭包就是将函数内部和外部连接起来的一座桥梁; 闭包的作用： ...","head":[["meta",{"property":"og:url","content":"https://chenvibes.github.io/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%9F%B3/%E3%80%8AJavaScript%E6%95%99%E7%A8%8B%E3%80%8B%E7%AC%94%E8%AE%B0/01.%E5%9F%BA%E7%A1%80.html"}],["meta",{"property":"og:site_name","content":"Mr Chen's Blog"}],["meta",{"property":"og:title","content":"基础"}],["meta",{"property":"og:description","content":"说明：本章内容为博主在原教程基础上添加自己的学习笔记，来源，教程版权归原作者所有。 一、JS 的一些名词概念 什么是作用域？ 变量存在的范围。 可分为全局作用域和函数作用域，ES6 新增块级作用域。 什么是闭包？ 闭包就是能够读取其他函数内部变量的函数。 闭包的形式：函数内部定义函数; 本质上闭包就是将函数内部和外部连接起来的一座桥梁; 闭包的作用： ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-09-17T13:26:50.000Z"}],["meta",{"property":"article:author","content":"Mr.Chen"}],["meta",{"property":"article:tag","content":"JavaScript"}],["meta",{"property":"article:published_time","content":"2020-01-12T11:49:16.000Z"}],["meta",{"property":"article:modified_time","content":"2024-09-17T13:26:50.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"基础\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2020-01-12T11:49:16.000Z\\",\\"dateModified\\":\\"2024-09-17T13:26:50.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Chen\\",\\"url\\":\\"/logo.png\\"}]}"]]},"headers":[{"level":2,"title":"一、JS 的一些名词概念","slug":"一、js-的一些名词概念","link":"#一、js-的一些名词概念","children":[]},{"level":2,"title":"二、数据类型的转换","slug":"二、数据类型的转换","link":"#二、数据类型的转换","children":[{"level":3,"title":"1、强制（手动）转换","slug":"_1、强制-手动-转换","link":"#_1、强制-手动-转换","children":[]},{"level":3,"title":"2、自动转换","slug":"_2、自动转换","link":"#_2、自动转换","children":[]}]},{"level":2,"title":"三、错误处理机制","slug":"三、错误处理机制","link":"#三、错误处理机制","children":[{"level":3,"title":"1、Error 实例对象","slug":"_1、error-实例对象","link":"#_1、error-实例对象","children":[]},{"level":3,"title":"2、原生错误类型","slug":"_2、原生错误类型","link":"#_2、原生错误类型","children":[]},{"level":3,"title":"3、自定义错误","slug":"_3、自定义错误","link":"#_3、自定义错误","children":[]},{"level":3,"title":"4、throw 语句 （中断程序并抛出错误）","slug":"_4、throw-语句-中断程序并抛出错误","link":"#_4、throw-语句-中断程序并抛出错误","children":[]},{"level":3,"title":"5、try...catch 结构（捕获错误，对错误进行处理，不中断）","slug":"_5、try-catch-结构-捕获错误-对错误进行处理-不中断","link":"#_5、try-catch-结构-捕获错误-对错误进行处理-不中断","children":[]},{"level":3,"title":"6、finally 代码块（在 try..catch 最后，必执行的）","slug":"_6、finally-代码块-在-try-catch-最后-必执行的","link":"#_6、finally-代码块-在-try-catch-最后-必执行的","children":[]}]},{"level":2,"title":"四、console 对象","slug":"四、console-对象","link":"#四、console-对象","children":[{"level":3,"title":"console.time()，console.timeEnd() （用于计算程序的用时）","slug":"console-time-console-timeend-用于计算程序的用时","link":"#console-time-console-timeend-用于计算程序的用时","children":[]}]},{"level":2,"title":"文档","slug":"文档","link":"#文档","children":[]}],"git":{"createdTime":1726576680000,"updatedTime":1726579610000,"contributors":[{"name":"chenzhen","email":"599422271@qq.com","commits":3}]},"readingTime":{"minutes":16.93,"words":5078},"filePathRelative":"前端开发/前端基石/《JavaScript教程》笔记/01.基础.md","localizedDate":"2020年1月12日","autoDesc":true}`);export{e as data};
