import{_ as t}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as e,c as d,e as a}from"./app-XuorXwmJ.js";const r={},h=a('<h2 id="arkts-开发语言基本介绍和区别" tabindex="-1"><a class="header-anchor" href="#arkts-开发语言基本介绍和区别" aria-hidden="true">#</a> ArkTS 开发语言基本介绍和区别</h2><blockquote><p>介绍：它在 TypeScript（简称 TS）的基础上，扩展了声明式 UI、状态管理等相应的能力，让开发者可以以更简洁、更自然的方式开发高性能应用。TS 是 JavaScript（简称 JS）的超集，ArkTS 则是 TS 的超集。</p></blockquote><h2 id="开发范式" tabindex="-1"><a class="header-anchor" href="#开发范式" aria-hidden="true">#</a> 开发范式</h2><table><thead><tr><th><div style="width:100px;"></div>开发范式名称</th><th><div style="width:80px;"></div>语言生态</th><th><div style="width:100px;"></div>UI 更新方式</th><th><div style="width:80px;"></div>适用场景</th><th>适用人群</th></tr></thead><tbody><tr><td>声明式开发范式</td><td>ArkTS 语言</td><td>数据驱动更新</td><td>复杂度较大、团队合作度较高的程序</td><td>移动系统应用开发人员、系统应用开发人员<br>IOS 的 SwiftUI(声明式)和 UIKit，或者安卓的 JetpackCompose(声明式)和 JetpackUI 以及 Flutter</td></tr><tr><td>类 Web 开发范式</td><td>JS 语言</td><td>数据驱动更新</td><td>界面较为简单的程序应用和卡片</td><td>Web 前端开发人员</td></tr></tbody></table><blockquote><p>说明： 声明式开发范式占用内存更少， 更推荐开发者选用声明式开发范式来搭建应用 UI 界面 。</p></blockquote><h2 id="生命周期" tabindex="-1"><a class="header-anchor" href="#生命周期" aria-hidden="true">#</a> 生命周期</h2>',6),i=[h];function o(c,s){return e(),d("div",null,i)}const _=t(r,[["render",o],["__file","HarmonyOs、Vue、React对比.html.vue"]]);export{_ as default};
