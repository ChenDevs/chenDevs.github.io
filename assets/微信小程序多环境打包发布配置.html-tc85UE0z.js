import{_ as n}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as s,c as a,e as p}from"./app-TnKl6VKN.js";const t={},e=p(`<h2 id="通过读写-manifest-json-等文件实现动态配置化" tabindex="-1"><a class="header-anchor" href="#通过读写-manifest-json-等文件实现动态配置化" aria-hidden="true">#</a> 通过读写 manifest.json 等文件实现动态配置化</h2><blockquote><p>1.src 目录下创建文件 modifyManifest.js，写入如下内容：</p></blockquote><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// modifyManifest.js</span>

<span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span>
<span class="token comment">//此处如果是用HBuilderX创建的项目manifest.json文件在项目跟目录，如果是 cli 创建的则在 src 下，这里要注意</span>
<span class="token comment">//process.env.UNI_INPUT_DIR为项目所在的绝对路径，经测试，相对路径会找不到文件</span>
<span class="token keyword">const</span> revert <span class="token operator">=</span> process<span class="token punctuation">.</span>argv<span class="token punctuation">[</span>process<span class="token punctuation">.</span>argv<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span>
<span class="token comment">// 根据还原参数区分使用原路径(最后执行命令的时候已经没有UNI全局变量了)</span>
<span class="token keyword">const</span> root <span class="token operator">=</span> revert <span class="token operator">==</span> <span class="token string">&#39;revert&#39;</span> <span class="token operator">?</span> <span class="token string">&#39;src&#39;</span> <span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">UNI_INPUT_DIR</span>
<span class="token keyword">const</span> manifestPath <span class="token operator">=</span> root <span class="token operator">+</span> <span class="token string">&#39;/manifest.json&#39;</span>
<span class="token keyword">let</span> Manifest <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">readFileSync</span><span class="token punctuation">(</span>manifestPath<span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">encoding</span><span class="token operator">:</span> <span class="token string">&#39;utf-8&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// pages/index/index.vue 文件修改</span>
<span class="token keyword">const</span> pageIndexPath <span class="token operator">=</span> root <span class="token operator">+</span> <span class="token string">&#39;/pages/index/index.vue&#39;</span>
<span class="token keyword">let</span> pageIndex <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">readFileSync</span><span class="token punctuation">(</span>pageIndexPath<span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">encoding</span><span class="token operator">:</span> <span class="token string">&#39;utf-8&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">function</span> <span class="token function">replaceManifest</span><span class="token punctuation">(</span><span class="token parameter">path<span class="token punctuation">,</span> value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> arr <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;.&#39;</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> len <span class="token operator">=</span> arr<span class="token punctuation">.</span>length
  <span class="token keyword">const</span> lastItem <span class="token operator">=</span> arr<span class="token punctuation">[</span>len <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span>

  <span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span>
  <span class="token keyword">let</span> ManifestArr <span class="token operator">=</span> Manifest<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\n</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span>

  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> index <span class="token operator">&lt;</span> ManifestArr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> index<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> item <span class="token operator">=</span> ManifestArr<span class="token punctuation">[</span>index<span class="token punctuation">]</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">RegExp</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">++</span>i
    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">===</span> len<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> hasComma <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">,</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span>
      ManifestArr<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">=</span> item<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>
        <span class="token keyword">new</span> <span class="token class-name">RegExp</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>lastItem<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;[\\\\s\\\\S]*:[\\\\s\\\\S]*</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>lastItem<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot; : </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>value<span class="token interpolation-punctuation punctuation">}</span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>hasComma <span class="token operator">?</span> <span class="token string">&#39;,&#39;</span> <span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
      <span class="token punctuation">)</span>
      <span class="token keyword">break</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  Manifest <span class="token operator">=</span> ManifestArr<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;\\n&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">// 动态配置appid</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">VUE_APP_ENV</span> <span class="token operator">===</span> <span class="token string">&#39;A环境标识参数&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// A环境</span>
  <span class="token function">replaceManifest</span><span class="token punctuation">(</span><span class="token string">&#39;mp-weixin.appid&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;&quot;A环境appid&quot;&#39;</span><span class="token punctuation">)</span>
  fs<span class="token punctuation">.</span><span class="token function">writeFileSync</span><span class="token punctuation">(</span>pageIndexPath<span class="token punctuation">,</span> pageIndex<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">&#39;文案B&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;文案A&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">flag</span><span class="token operator">:</span> <span class="token string">&#39;w&#39;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">VUE_APP_ENV</span> <span class="token operator">===</span> <span class="token string">&#39;B环境标识参数&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// B环境</span>
  <span class="token function">replaceManifest</span><span class="token punctuation">(</span><span class="token string">&#39;mp-weixin.appid&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;&quot;B环境appid&quot;&#39;</span><span class="token punctuation">)</span>
  fs<span class="token punctuation">.</span><span class="token function">writeFileSync</span><span class="token punctuation">(</span>pageIndexPath<span class="token punctuation">,</span> pageIndex<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">&#39;文案A&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;文案B&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">flag</span><span class="token operator">:</span> <span class="token string">&#39;w&#39;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
  <span class="token comment">// C环境</span>
  <span class="token function">replaceManifest</span><span class="token punctuation">(</span><span class="token string">&#39;mp-weixin.appid&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;&quot;C环境appid&quot;&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> lastParam <span class="token operator">=</span> process<span class="token punctuation">.</span>argv<span class="token punctuation">[</span>process<span class="token punctuation">.</span>argv<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>lastParam <span class="token operator">==</span> <span class="token string">&#39;revert&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// 还原appid</span>
  <span class="token function">replaceManifest</span><span class="token punctuation">(</span><span class="token string">&#39;mp-weixin.appid&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;&quot;默认appid&quot;&#39;</span><span class="token punctuation">)</span>
  <span class="token comment">// 文案还原</span>
  fs<span class="token punctuation">.</span><span class="token function">writeFileSync</span><span class="token punctuation">(</span>pageIndexPath<span class="token punctuation">,</span> pageIndex<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">&#39;环境下文案&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;默认文案&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">flag</span><span class="token operator">:</span> <span class="token string">&#39;w&#39;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

fs<span class="token punctuation">.</span><span class="token function">writeFileSync</span><span class="token punctuation">(</span>manifestPath<span class="token punctuation">,</span> Manifest<span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">flag</span><span class="token operator">:</span> <span class="token string">&#39;w&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><ol start="2"><li>在 vue.config.js 中引入。</li></ol></blockquote><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./src/modifyManifest.js&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="接入-miniprogram-ci" tabindex="-1"><a class="header-anchor" href="#接入-miniprogram-ci" aria-hidden="true">#</a> 接入 miniprogram-ci</h2><h3 id="_1-简介" tabindex="-1"><a class="header-anchor" href="#_1-简介" aria-hidden="true">#</a> 1. 简介</h3><blockquote><p>miniprogram-ci 是从微信开发者工具中抽离的关于小程序/小游戏项目代码的编译模块。开发者可不打开小程序开发者工具，独立使用 miniprogram-ci 进行小程序代码的上传、预览等操作。</p></blockquote><ul><li>文档：https://www.npmjs.com/package/miniprogram-ci</li></ul><h3 id="_2-平台设置" tabindex="-1"><a class="header-anchor" href="#_2-平台设置" aria-hidden="true">#</a> 2. 平台设置</h3><p>使用 miniprogram-ci 前应在微信公众平台登录小程序，访问“开发-开发管理-开发设置”后下载“代码上传密钥”，并配置 IP 白名单。</p><p>开发者可选择打开 IP 白名单，打开后只有白名单中的 IP 才能调用相关接口。</p><p>代码上传密钥拥有预览、上传代码的权限，密钥不会明文存储在微信公众平台上，一旦遗失必须重置，请开发者妥善保管 <img src="https://img2023.cnblogs.com/blog/1158910/202305/1158910-20230512212321478-462720078.png" alt="示例" loading="lazy"></p><h3 id="_3-脚本调用" tabindex="-1"><a class="header-anchor" href="#_3-脚本调用" aria-hidden="true">#</a> 3. 脚本调用：</h3><p><code>npm install miniprogram-ci --save</code></p><h3 id="_4-项目对象" tabindex="-1"><a class="header-anchor" href="#_4-项目对象" aria-hidden="true">#</a> 4. 项目对象</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> ci <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;miniprogram-ci&#39;</span><span class="token punctuation">)</span>
<span class="token comment">// 注意： new ci.Project 调用时，请确保项目代码已经是完整的，避免编译过程出现找不到文件的报错。</span>
<span class="token keyword">const</span> project <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ci<span class="token punctuation">.</span>Project</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">appid</span><span class="token operator">:</span> <span class="token string">&#39;appid&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;miniProgram&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">projectPath</span><span class="token operator">:</span> <span class="token string">&#39;the/project/path&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">privateKeyPath</span><span class="token operator">:</span> <span class="token string">&#39;the/privatekey/path&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">ignores</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;node_modules/**/*&#39;</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上传代码</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> ci <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;miniprogram-ci&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">;</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> project <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ci<span class="token punctuation">.</span>Project</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">appid</span><span class="token operator">:</span> <span class="token string">&#39;wxsomeappid&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;miniProgram&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">projectPath</span><span class="token operator">:</span> <span class="token string">&#39;the/project/path&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">privateKeyPath</span><span class="token operator">:</span> <span class="token string">&#39;the/path/to/privatekey&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">ignores</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;node_modules/**/*&#39;</span><span class="token punctuation">]</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> uploadResult <span class="token operator">=</span> <span class="token keyword">await</span> ci<span class="token punctuation">.</span><span class="token function">upload</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    project<span class="token punctuation">,</span>
    <span class="token literal-property property">version</span><span class="token operator">:</span> <span class="token string">&#39;1.1.1&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">desc</span><span class="token operator">:</span> <span class="token string">&#39;hello&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">setting</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">es6</span><span class="token operator">:</span> <span class="token boolean">true</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">onProgressUpdate</span><span class="token operator">:</span> console<span class="token punctuation">.</span>log
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>uploadResult<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>详细参数配置，见文档：https://developers.weixin.qq.com/miniprogram/dev/devtools/ci.html</p><h3 id="_5-实际使用" tabindex="-1"><a class="header-anchor" href="#_5-实际使用" aria-hidden="true">#</a> 5.实际使用</h3><p>看下目录结构：下面 2 个 key 是不同 appid 环境的代码上传秘钥 <img src="https://img2023.cnblogs.com/blog/1158910/202305/1158910-20230515151102411-451799641.png" alt="示例" loading="lazy"></p><p>我们主要看下 autoUpload.js</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 自动将代码上传到小程序</span>
<span class="token keyword">const</span> ci <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;miniprogram-ci&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> mainfest <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../src/manifest.json&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> slog <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;single-line-log&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>stdout
<span class="token keyword">const</span> robot <span class="token operator">=</span> <span class="token function">Number</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">ROBOT</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token number">1</span>
<span class="token keyword">const</span> buildVersion <span class="token operator">=</span>
  process<span class="token punctuation">.</span>env<span class="token punctuation">.</span>npm_config_build_version <span class="token operator">||</span> mainfest<span class="token punctuation">.</span>versionName

<span class="token keyword">function</span> <span class="token function">getUploadDesc</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// dev</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>robot <span class="token operator">===</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token string">&#39;build by robot --dev&#39;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// test</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>robot <span class="token operator">===</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token string">&#39;build by robot --test&#39;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// release</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>robot <span class="token operator">===</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token string">&#39;build by robot --release&#39;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// uat</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>robot <span class="token operator">===</span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token string">&#39;build by robot --uat&#39;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> mainfest<span class="token punctuation">.</span>description
<span class="token punctuation">}</span>

<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> project <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ci<span class="token punctuation">.</span>Project</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">appid</span><span class="token operator">:</span> mainfest<span class="token punctuation">[</span><span class="token string">&#39;mp-weixin&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>appid<span class="token punctuation">,</span> <span class="token comment">//appid</span>
    <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;miniProgram&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">projectPath</span><span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;../dist/build/mp-weixin&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">//项目路径</span>
    <span class="token literal-property property">privateKeyPath</span><span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>
      __dirname<span class="token punctuation">,</span>
      <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">./private.</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>mainfest<span class="token punctuation">[</span><span class="token string">&#39;mp-weixin&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>appid<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.key</span><span class="token template-punctuation string">\`</span></span>
    <span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">//小程序后台的上传密匙</span>
    <span class="token literal-property property">ignores</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;node_modules/**/*&#39;</span><span class="token punctuation">]</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>

  <span class="token keyword">let</span> slogIndex <span class="token operator">=</span> <span class="token number">0</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token keyword">await</span> ci<span class="token punctuation">.</span><span class="token function">upload</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      project<span class="token punctuation">,</span>
      <span class="token literal-property property">version</span><span class="token operator">:</span> buildVersion<span class="token punctuation">,</span>
      <span class="token literal-property property">desc</span><span class="token operator">:</span> <span class="token function">getUploadDesc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token literal-property property">setting</span><span class="token operator">:</span> mainfest<span class="token punctuation">[</span><span class="token string">&#39;mp-weixin&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>setting<span class="token punctuation">,</span>
      robot<span class="token punctuation">,</span>
      <span class="token function-variable function">onProgressUpdate</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token function">slog</span><span class="token punctuation">(</span>
          <span class="token string">&#39;上传中&#39;</span> <span class="token operator">+</span>
            <span class="token punctuation">(</span>slogIndex <span class="token operator">===</span> <span class="token number">0</span> <span class="token operator">?</span> <span class="token string">&#39;.&#39;</span> <span class="token operator">:</span> slogIndex <span class="token operator">===</span> <span class="token number">1</span> <span class="token operator">?</span> <span class="token string">&#39;..&#39;</span> <span class="token operator">:</span> <span class="token string">&#39;...&#39;</span><span class="token punctuation">)</span> <span class="token operator">+</span>
            <span class="token string">&#39;\\n&#39;</span>
        <span class="token punctuation">)</span>
        slogIndex<span class="token operator">++</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>slogIndex <span class="token operator">===</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          slogIndex <span class="token operator">=</span> <span class="token number">0</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">上传成功 版本</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>buildVersion<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">上传失败 版本</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>buildVersion<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> error<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们还有个 prebuild.js 用于不同的环境设置不同的 appid</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> process <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;process&#39;</span><span class="token punctuation">)</span>

<span class="token keyword">function</span> <span class="token function">outputManifest</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> manifest <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../src/manifest.json&#39;</span><span class="token punctuation">)</span>
  manifest<span class="token punctuation">[</span><span class="token string">&#39;mp-weixin&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>appid <span class="token operator">=</span>
    process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">BUILD_ENV</span> <span class="token operator">===</span> <span class="token string">&#39;uat&#39;</span> <span class="token operator">?</span> <span class="token string">&#39;wx***&#39;</span> <span class="token operator">:</span> <span class="token string">&#39;wx***&#39;</span>
  fs<span class="token punctuation">.</span><span class="token function">writeFileSync</span><span class="token punctuation">(</span>
    <span class="token string">&#39;./src/manifest.json&#39;</span><span class="token punctuation">,</span>
    <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>manifest<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&#39;\\n&#39;</span><span class="token punctuation">,</span>
    <span class="token string">&#39;UTF-8&#39;</span>
  <span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token function">outputManifest</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>那么在 package.json 的 scripts 设置命令如下</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;script&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;build-dev&quot;</span><span class="token operator">:</span> <span class="token string">&quot;cross-env BUILD_ENV=dev node ./ci/prebuild.js &amp;&amp; cross-env NODE_ENV=production UNI_PLATFORM=mp-weixin vue-cli-service --mode dev uni-build --minimize &amp;&amp; cross-env ROBOT=1 node ./ci/autoUpload.js&quot;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,28),o=[e];function c(i,l){return s(),a("div",null,o)}const k=n(t,[["render",c],["__file","微信小程序多环境打包发布配置.html.vue"]]);export{k as default};
