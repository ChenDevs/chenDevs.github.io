import { listenEvent } from 'maverick.js/std';
import { N as LIST_ADD, W as LIST_REMOVE, L as LIST_SELECT } from '../../media-core.js';

class NativeAudioTracks {
  constructor(_provider, _context) {
    this.j = _provider;
    this.ph = _context;
    this.qh.onaddtrack = this.sh.bind(this);
    this.qh.onremovetrack = this.th.bind(this);
    this.qh.onchange = this.uh.bind(this);
    listenEvent(this.ph.audioTracks, "change", this.vh.bind(this));
  }
  get qh() {
    return this.j.media.audioTracks;
  }
  sh(event) {
    const _track = event.track;
    if (_track.label === "")
      return;
    const audioTrack = {
      id: _track.id + "",
      label: _track.label,
      language: _track.language,
      kind: _track.kind,
      selected: false
    };
    this.ph.audioTracks[LIST_ADD](audioTrack, event);
    if (_track.enabled)
      audioTrack.selected = true;
  }
  th(event) {
    const track = this.ph.audioTracks.getById(event.track.id);
    if (track)
      this.ph.audioTracks[LIST_REMOVE](track, event);
  }
  uh(event) {
    let enabledTrack = this.rh();
    if (!enabledTrack)
      return;
    const track = this.ph.audioTracks.getById(enabledTrack.id);
    if (track)
      this.ph.audioTracks[LIST_SELECT](track, true, event);
  }
  rh() {
    return Array.from(this.qh).find((track) => track.enabled);
  }
  vh(event) {
    const { current } = event.detail;
    if (!current)
      return;
    const track = this.qh.getTrackById(current.id);
    if (track) {
      const prev = this.rh();
      if (prev)
        prev.enabled = false;
      track.enabled = true;
    }
  }
}

export { NativeAudioTracks as N };
