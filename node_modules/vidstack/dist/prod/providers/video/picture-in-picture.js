import { listenEvent } from 'maverick.js/std';
import { _ as canUsePictureInPicture } from '../../media-core.js';

class VideoPictureInPicture {
  constructor(_video, _media) {
    this.aa = _video;
    this.k = _media;
    listenEvent(this.aa, "enterpictureinpicture", this.ri.bind(this));
    listenEvent(this.aa, "leavepictureinpicture", this.si.bind(this));
  }
  get active() {
    return document.pictureInPictureElement === this.aa;
  }
  get supported() {
    return canUsePictureInPicture(this.aa);
  }
  async enter() {
    return this.aa.requestPictureInPicture();
  }
  exit() {
    return document.exitPictureInPicture();
  }
  ri(event) {
    this.Hc(true, event);
  }
  si(event) {
    this.Hc(false, event);
  }
  Hc = (active, event) => {
    this.k.delegate.R("picture-in-picture-change", {
      detail: active,
      trigger: event
    });
  };
}

export { VideoPictureInPicture as V };
